<%= @exception.class.to_s =~ /^[aeiou]/i ? 'An' : 'A' %> <%= @exception.class %> occurred in <%= @kontroller.controller_name %>#<%= @kontroller.action_name %>:

  <%= raw @exception.message %>
  <%= raw @backtrace.first %>

<%
    sections = @sections.map do |section|
      begin
        summary = render(section).strip
        unless summary.blank?
          title = render("title", title: section).strip
          "#{title}\n\n#{summary.gsub(/^/, "  ")}\n\n"
        end

      rescue Exception => e
        title = render("title", title: section).strip
        summary = ["ERROR: Failed to generate exception summary:", [e.class.to_s, e.message].join(": "), e.backtrace && e.backtrace.join("\n")].compact.join("\n\n")

        [title, summary.gsub(/^/, "  "), nil].join("\n\n")
      end
    end.join
%>

<%= raw sections %>
