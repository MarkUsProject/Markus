name: MarkUs Tests
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches:
      - master

jobs:
  test:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: markus_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --entrypoint redis-server
    env:
      BUNDLE_WITHOUT: development:production:console:unicorn
      RAILS_ENV: test
      NODE_ENV: test
      RSPEC_RENDER_VIEWS: true
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get -yqq install libpq-dev cmake ghostscript pandoc imagemagick libmagickwand-dev git libgl1 tesseract-ocr
      - name: Set up ruby and cache gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ruby-2.7
          bundler-cache: true
      - name: Set up node and cache packages
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
      - name: Install npm packages
        run: npm ci
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-jupyter.txt') }}-${{ hashFiles('requirements-scanner.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install python packages
        run: |
          python3.9 -m venv venv
          ./venv/bin/pip install -r requirements-jupyter.txt -r requirements-scanner.txt
      - name: Configure server
        run: |
          sudo rm -f /etc/localtime
          sudo ln -s /usr/share/zoneinfo/US/Eastern /etc/localtime
          sudo sed -ri 's/(rights=")none("\s+pattern="PDF")/\1read\2/' /etc/ImageMagick-6/policy.xml
          cp config/database.yml.ci config/database.yml
      - name: Build assets
        run: bundle exec rake javascript:build
      - name: Set up database
        run: bundle exec rails db:migrate
      - name: Install chrome and chromedriver
        uses: nanasess/setup-chromedriver@v1
      - name: Run chromedriver
        run: chromedriver --whitelisted-ips &
      - name: Run rspec tests
        run: |
          bundle exec rspec
          bundle exec rspec spec/system
        env:
          MARKUS__PYTHON: ./venv/bin/python3
      - name: Coveralls Parallel (rspec)
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: rspec
          parallel: true
      - name: Run jest tests
        run: npm run test-cov
      - name: Coveralls Parallel (jest)
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: jest
          parallel: true

  finish:
    needs: test
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
          carryforward: "rspec,jest"
