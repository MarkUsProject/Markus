namespace :db do

  desc 'Create assignments'
  task :assignments => :environment do
    # Assignments
    puts 'Assignment 1: Single Student Assignment No Marks'
    assignment_stat = AssignmentStat.new
    assignment_stat.grade_distribution_percentage = 0.1
    rule = NoLateSubmissionRule.new
    Assignment.create(
        short_identifier: 'A1',
        description: 'Conditionals and Loops',
        message: 'Learn to use conditional statements, and loops.',
        group_min: 1,
        group_max: 1,
        student_form_groups: false,
        group_name_autogenerated: true,
        group_name_displayed: false,
        repository_folder: 'A1',
        due_date: 1.minute.from_now,
        marking_scheme_type: Assignment::MARKING_SCHEME_TYPE[:rubric],
        allow_web_submits: true,
        display_grader_names_to_students: false,
        submission_rule: rule,
        assignment_stat: assignment_stat
    )

    rule = NoLateSubmissionRule.new
    assignment_stat = AssignmentStat.new
    assignment_stat.grade_distribution_percentage = 0.2
    assignment_msg  = <<-EOS
    Basic exercise in Object Oriented Programming.
    Implement Animal, Cat, and Dog, as described in class.
    EOS
    puts 'Assignment 2: Group Assignment No Marks'
    Assignment.create(
        short_identifier: 'A2',
        description: 'Cats and Dogs',
        message: assignment_msg,
        group_min: 2,
        group_max: 3,
        student_form_groups: true,
        group_name_autogenerated: true,
        group_name_displayed: false,
        repository_folder: 'A2',
        due_date: 1.minute.from_now,
        marking_scheme_type: Assignment::MARKING_SCHEME_TYPE[:flexible],
        allow_web_submits: true,
        display_grader_names_to_students: false,
        submission_rule: rule,
        assignment_stat: assignment_stat
    )

    assignment_stat = AssignmentStat.new
    rule = NoLateSubmissionRule.new
    puts 'Assignment 3: Single Student Sporadic Marks'
    Assignment.create(
        short_identifier: 'A3',
        description: 'Ode to a Python program',
        message: 'Learn to use files, dictionaries, and testing.',
        group_min: 1,
        group_max: 1,
        student_form_groups: false,
        group_name_autogenerated: true,
        group_name_displayed: false,
        repository_folder: 'A3',
        due_date: 2.months.from_now,
        marking_scheme_type: Assignment::MARKING_SCHEME_TYPE[:rubric],
        allow_web_submits: true,
        display_grader_names_to_students: false,
        submission_rule: rule,
        assignment_stat: assignment_stat
    )

    rule = NoLateSubmissionRule.new
    assignment_stat = AssignmentStat.new
    puts 'Assignment 4: Group Assignment Sporadic Marks'
    Assignment.create(
        short_identifier: 'A4',
        description: 'Introduction to Recursion',
        message: 'Implement functions using Recursion',
        group_min: 2,
        group_max: 3,
        student_form_groups: true,
        group_name_autogenerated: true,
        group_name_displayed: false,
        repository_folder: 'A4',
        due_date: 2.months.from_now,
        marking_scheme_type: Assignment::MARKING_SCHEME_TYPE[:flexible],
        allow_web_submits: true,
        display_grader_names_to_students: false,
        submission_rule: rule,
        assignment_stat: assignment_stat
    )
  end
end
