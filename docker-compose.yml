version: '3.7'

services:
  app: &app
    build:
      context: .
      dockerfile: ./.dockerfiles/Dockerfile
      target: dev
      args:
        UBUNTU_VERSION: focal
        RUBY_VERSION: '2.7'
        PG_MAJOR: '12'
        NODE_MAJOR: '12'
        YARN_VERSION: '1.22.5'
        BUNDLER_VERSION: '1.17.3'
        PYTHON_VERSION: '3.9'
        USER: 'markus'
    image: markus-dev:1.0.0
    tmpfs:
      - /tmp
    stdin_open: true
    tty: true
    env_file:
      - .dockerfiles/.env
    environment:
      - NODE_ENV=development
      - RAILS_ENV=development
    networks:
      - default
      - markus_dev
    depends_on:
      - postgres
      - redis

  ssh:
    build:
      context: .
      dockerfile: ./.dockerfiles/Dockerfile-ssh
      args:
        UBUNTU_VERSION: focal
        SSH_USER: git
    image: markus-ssh:1.0.0
    volumes:
      - log:/home/git/log
      - repos:/home/git/csc108
    environment:
      - TZ=America/Toronto
    command: /usr/sbin/sshd -D -e
    ports:
      - '2222:22'

  rails: &rails
    <<: *app
    entrypoint: .dockerfiles/entrypoint-dev-rails.sh
    command: bundle exec rails server -b 0.0.0.0
    environment:
      - RAILS_RELATIVE_URL_ROOT=/csc108
      - PGDATABASE=markus_development
      - PGDATABASETEST=markus_test
      - MARKUS__REPOSITORY__SSH_URL=ssh://git@localhost:2222/~/csc108
      - MARKUS__REPOSITORY__MARKUS_GIT_SHELL=/markus-git-shell.sh
    ports:
      - '3000:3000'
    volumes:
      - app_data:/app/data/dev
      - repos:/app/data/dev/repos
      - bundle:/bundle
      - tmp:/app/tmp
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - packs_test:/app/public/packs-test
      - ssh_pub_key:/ssh_pub_key
      - log:/app/log
      - python:/app/venv
      - .:/app:cached
    depends_on:
      - postgres
      - redis
      - resque
      - webpacker
      - ssh

  resque:
    <<: *rails
    entrypoint: .dockerfiles/entrypoint-dev-resque.sh
    command: bundle exec rails resque:work QUEUE=* TERM_CHILD=1
    depends_on:
      - redis
    ports: []

  postgres:
    image: postgres:10
    volumes:
      - postgres:/var/lib/postgresql/data
      - log:/root/log:cached
      - tmp:/app/tmp
    environment:
      - POSTGRES_PASSWORD=docker
      - POSTGRES_INITDB_ARGS="-A md5"
    ports:
      - '35432:5432'

  redis:
    image: redis:3.2-alpine
    volumes:
      - redis:/data
    ports:
      - 6379

  webpacker:
    <<: *app
    entrypoint: .dockerfiles/entrypoint-dev-wait-for-install.sh
    command: ./bin/webpack-dev-server
    ports:
      - '3035:3035'
    volumes:
      - bundle:/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
      - packs_test:/app/public/packs-test
      - .:/app:cached
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - RAILS_ENV=${RAILS_ENV:-development}
      - WEBPACKER_DEV_SERVER_HOST=0.0.0.0
      - PGDATABASE=markus_development
      - PGDATABASETEST=markus_test

volumes:
  app_data:
  repos:
  postgres:
  redis:
  bundle:
  node_modules:
  packs:
  packs_test:
  tmp:
  log:
  python:
  ssh_pub_key:
    name: ssh_pub_key

networks:
  markus_dev:
    name: markus_dev

