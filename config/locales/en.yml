en:
    answer_yes:         "Yes"
    answer_no:          "No"
    markus:             "MarkUs"
    close:              "Close"
    all:                "All"
    actions:            "Actions"
    continue:           "Continue"

    # app/views/layouts/_header.html.erb
    working:            "Loading"
    please_wait:        "Please waitâ€¦"

    # app/views/api/_key_display.html.erb
    api_key:            "Your API Key"
    api_key_unavailable:        "Unavailable"
    reset_api_key:        "Reset my API key"
    api_key_help: "The API key is used for the REST interface for authentication. See <a href=\"https://github.com/MarkUsProject/Markus/wiki/RESTfulApiDocumentation\">MarkUs Wiki</a> for information on how to use the REST API."

    # app/views/layouts/_menu.html.erb
    dashboard:          "Dashboard"
    home:               "Home"
    settings:           "Settings"

    # app/views/shared/_assignments_dropdown.html.erb
    quick_links:  "Quick links"

    # app/models/assignment_file.rb
    validation_messages:
      format_of_assignment_file: "must include alphanumeric, '.', '-', '_' or '/' characters only"

    # app/views/assignments/_list_manage.html.erb
    no_assignments:            "There are currently no assignments."

    # app/views/assignments/
    name: "Name"
    filename:  "Filename"
    message:  "Message"
    remove:  "Remove"
    days_left:          "(%{days} day(s) left)"
    description:        "Description"
    shortened_date:     "Date"
    remove_date:        "Remove Date"
    manage_course_work: "Manage Course Work"
    incorrect_format:   "Incorrect format"
    required_fields: "Required Fields"
    assignment:
        hidden: "%{assignment_text} (hidden)"
        update_success:        "Successfully updated the assignment"
        no_required_files_read:  "There are no required files for this assignment."
        upload_file_requirement: "The list of uploaded files does not match the required files for this assignment."
        group:
            assign_over_limit: "You have assigned more than the maximum number of students to group %{group}"
            grace_day_over_limit: "You have assigned one or more students who has less grace period credits than the amount already used by group %{group} for this assignment"
            select_a_grader: "Select a grader"
            select_a_criterion: "Select at least one criterion"
            group_submission_no_files: "One or more of the groups selected has no files in their submission. Grader not assigned."
            clone_warning:
                no_active_students: "Group '%{group}' not cloned: zero active students left"
                no_member: "Member '%{member}' not added to Group '%{group}': %{error}"
                other: "Group '%{group}' not cloned: %{error}"
        starter_code:
            description: "Starter code files you upload will be automatically added to every new group's repositories."
            enqueued: "Starter code files will be uploaded to existing group repositories in the background."
            groups_exist: "Some groups already exist. To update starter code files for existing groups, select whether to overwrite their files (including previous starter code files) and press the button."
            overwrite: "Overwrite group files"
            repo_url: "Repository URL"
            title: "Starter Code"
            update: "Update"
        help:
            graders: "Assign graders to specific student groups and criteria. By default, graders will be assigned to all criteria."
            assign_scans: "Assign students to scanned exam groups based on printed student names."
        start_peer_review: "Peer Review"
        peer_review_results: "Peer Review Results"
        your_reviews: "Your Reviews"
        review: "Peer Review"
        batch_tests_status_table:
            test_runs_status: "Test Runs Status"
            in_progress: "in progress"
            created_at: "Started"
            status: "Status"
            estimated_remaining_time: "Estimated Remaining Time"
            action: "Action"
        test_runs_statuses:
            complete: "complete"
            in_progress: "in progress"
            cancelled: "cancelled"
    peer_review:
        assign: "Assign Peer Reviews"
        review: "Review "
        reviews: "Reviews"
        problem: "An unexpected problem occured"
        submission_nil_failure: "Submissions for original assignment need to be collected first"
        random_assign_failure: "Unable to randomly assign, too many reviews requested per selected reviewer/reviewees"
        number_of_reviews_header: "Num reviews"
        assigned_reviewers_header: "Assigned reviewers"
        reviewer_group: "Reviewer group"
        reviews_made_on_submission: "Reviews made on your submission: "
        reviewers_reviews: "This reviewer's reviews: "
        view_ta_result: "View TA Result"
        empty_list_reviewers: "Cannot have an empty list of reviewers"
        empty_list_reviewees: "Cannot have an empty list of reviewees"
        cannot_allow_reviewer_to_be_reviewee: "A student cannot be a reviewer and reviewee"
        number_per_group: "Number of peer reviews per group"
        number_assigned_reviewers: "Num Assigned Reviewers"
        peer_review: "Peer Review"
        action:
            assign: "Assign Peer Reviewer(s)"
            unassign: "Unassign Peer Reviewer(s)"
            random_assign: "Randomly Assign Reviewers"
        download:
            assigned_reviewers_header: "Download Peer Review Assignments"
            assigned_reviewers_csv: "Reviewer group to reviewee group CSV"
        upload:
            header: "Upload Peer Review CSV"
            description: "CSV file format:<br><code>result_id,group_name</code><br>"

    remove_grader:      "Remove Grader"
    add_new:            "Add New File"
    edit:               "Edit"
    save:               "Save"
    save_changes:       "Save Changes"
    skip:               "Skip"
    apply:              "Apply"
    delete:             "Delete"
    submit:             "Submit"
    cancel:             "Cancel"
    all:                "All"
    active:             "Active"
    not_active:         "Not active"
    choose:             "Choose..."
    properties:         "Properties"
    peer_reviews:       "Peer reviews"
    help:               "Help"
    preview:            "Preview"
    encoding:           "Encoding"
    select_csv_file:    "Select a CSV file of the following form: <code>%{code}</code>"
    all_csv_file:       "All fields: "

    past_start_date_edit_warning:  "WARNING:  The start date you have selected is in the past."

    copy: "Copy"

    csv_invalid_lines: "The following CSV lines were invalid: "
    csv_valid_lines: "Successfully uploaded %{valid_line_count} entries"
    csv_upload_user_duplicate: "Detected duplicate user name: %{user_name}"
    uncommitted_changes_warning: "Your changes are not yet saved, do you still want to navigate away?"
    still_working_warning: "There are unfinished jobs still being processed.  They might not be saved if you leave now."

    csv:
      repo_collision_warning:  "Warning: Repository '%{repo_name}' exists already. Group name was: '%{group_name}'."
      group_to_grader:         "You must supply a CSV file for group to grader mapping"
      student_to_grader:       "You must supply a CSV file for student to grader mapping"
      invalid_csv:             "The format of the CSV file was not recognized"
      invalid_row:
        invalid_format: "Invalid Row Format"
      upload:
        # when a non-text file has a csv extension (ie: user changes extension
        # from .pdf to .csv on a pdf file)
        non_text_file_with_csv_extension: "The selected file is not a csv file (even though it may have a csv extension)."
      group_with_different_repo: "Error: Group %{group_name} cannot be created since a group with the same name and a different repository already exists"
      group_with_different_membership_current_assignment: "Error: Group %{group_name} cannot be created since a group with the same name but with different memberships already exists for the current assignment"
      group_with_different_membership_different_assignment: "Error: Group %{group_name} cannot be created since a group with the same name but with different memberships already exists for a different assignment"
      memberships_not_unique: "Error: Group %{group_name} cannot be created since student '%{student_user_name}' already belongs to a different group for the current assignment"
      repository_already_exists: "Error: Group %{group_name} cannot be created since a repository with path '%{repo_path}' already exists"
      member_does_not_exist: "Error: Group %{group_name} cannot be created since a student with username '%{student_user_name}' does not exist"

    browse_submissions:
      review_state:         "Review State"

    no_assignments_and_grade_entry_forms_message: "There are currently no assignments and marks spreadsheets."

    groups:
      assign_scans:     "Assign Scans"
      skip_group:       "Skip group"
      done_assign: "All groups have been successfully assigned students"
      randomly_assign_graders: "Randomly assign Graders"
      upload:
        description: "CSV file format:<br><code>group_name,repository_name,user_name,<br>user_name ... </code><br>"
        importing: " Importing groups via CSV upload into MarkUs will destroy existing groups!"
        upload_grader_map: "Upload Group / Grader Map"
        upload_grader_criteria_map: "Upload Criteria / Grader Map"
        description_grader_map: "CSV file format:<br><code>group_name,grader_user_name,grader_user_name,... </code><br>"
        description_grader_criteria_map: "CSV file format:<br><code>criterion_name,grader_user_name,grader_user_name,... </code><br>"
        remove_existing_mappings: 'Remove existing mappings'
      download:
        download_grader_maps: "Download Grader Maps"
        download_grader_groups_csv: "Group / Grader map CSV format"
        download_grader_criteria_csv: "Criteria / Grader map CSV format"
      action:
        assign_grader: "Assign Grader(s)"
        unassign_grader: "Unassign Grader(s)"
      csv:
        could_not_find_source: "Could not find source assignment for cloning groups"
        could_not_find_target: "Could not find target assignment for cloning groups"

    results:
      review_title: "%{assignment_name} Peer Review for %{group_name} â€“ review by %{reviewer_name}"
      successfully_changed: "Successfully updated %{changed} results"
      could_not_find_file: "Could not find %{filename} in repository %{repository_name}"

    mark:
      error:
        validate_criteria: "must be between 0 and the maximum mark of the criterion"

    #Sutdent's View (student)
    student:
      peer_assignment: "%{short_identifier}: Peer Reviews"
      overview: "Overview"
      last_revision_date: "Last Revision Date:<br><span class=\"info_date\">%{last_modified_date}</span>"
      files: "files"
      missing_required_files: "<span class=\"info_number\">%{missing_files}</span><span class=\"info %{style_class}\"> missing required file(s)</span>"
      no_peer_submission_yet: "You have no submissions to review yet."
      no_reviews: "No one has reviewed you yet."
      submission:
        file_manager: "%{short_identifier}: File Manager"
        conflicts: "Conflicts"
        file_conflicts: "Your changes have not been made.  The following file conflicts were detected:"
        missing_files: "You still need to submit %{file} required file(s) for this assignment:"
        no_action_detected: "No actions were detected in the last submit.  Nothing was changed."
        external_submit_only: "MarkUs is only accepting external submits"
        invalid_file_name: "Invalid file name on submitted file"
        missing_file: "Could not download %{file_name}.  File may be missing."
        no_files_available: "No files available"
        no_revision_available: "No revision available"
        version_control_warning: "Submitting files here overrides any changes made using version control. Make sure you have worked on the most recent files before submitting."
        empty_file_warning: "%{file_name} is empty"
        file_too_large: "The size of the uploaded file %{file_name} exceeds the maximum of %{max_size} MB."

    #Graders' View
    graders:
      assigned_graders:   "Assigned Graders"
      coverage:           "Coverage"
      assign_to_criteria: "Assign graders to individual criteria (if unselected, all graders will be able to edit all criteria)"
      skip_empty_submissions: "Do not assign Graders to groups with empty submissions (requires that submissions are collected)"
      download:
        begin_annotation: "%{comment_start} ANNOTATION %{id}: %{text} %{comment_end}"
        end_annotation: "%{comment_start} END ANNOTATION %{id} %{comment_end}"

    #Grade Entry Forms Graders' View
    marks_graders:
      download:
        download_grader_students_csv: "Student / Grader map CSV format"
      upload:
        upload_grader_map: "Upload Student / Grader Map"
        description_grader_map: "CSV file format:<br>
            <code>student_user_name,grader_user_name,grader_user_name,... </code><br>"

    add_student:
      success: "Student %{user_name} added."
      fail:
        general: "Something went wrong. Could not add %{user_name}."
        hidden:  "Could not add %{user_name} - this student's account has been disabled."
        already_grouped: "Could not add %{user_name} - this student is already a member of another group."

    create_group:
      fail:
        due_date_passed: "Could not create group - the due date for this assignment has passed and there are either no grace periods allowed, or the grace period for this assignment has also passed."
        not_allow_to_form_groups: "Assignment does not allow students to form groups"
        already_have_a_group: "You already have a group, and cannot create another"
        can_not_work_alone: "You cannot work alone for this assignment - the group size minimum is %{group_min}"
        do_not_have_a_group: "You do not currently have a group"

    invite_student:
      success: "Invitations successful"
      fail:
        only_inviter: "Only the inviter can delete a declined invitation"
        due_date_passed: "Could not invite %{user_name} - the due date for this assignment has passed and there are either no grace periods allowed, or the grace period for this assignment has also passed."
        dne:  "Could not invite %{user_name} - this student does not exist."
        hidden:  "Could not invite %{user_name} - this student's account has been disabled."
        already_pending: "Could not invite %{user_name} - this student is already a pending member of this group."
        group_max_reached: "Could not invite %{user_name} - group maximum has been reached."
        inviting_self: "You cannot invite yourself to your own group."
        already_grouped: "Could not invite %{user_name} - this student is already a member of another group."
        need_to_create_group: "You must create a group before you can invite users"
        not_same_section: "Student %{user_name} is outside of your section."
        error: "Failed to invite student %{user_name}."
    update_files:
      success:  "Your changes have been made."

    submission_file:
      error:
        no_access: "No access to submission file with id #%{submission_file_id}."
        binary_file_message: "Binary content: Use download button to view file!"

    feedback_file:
      error:
        no_access: "No access to feedback file with id #%{feedback_file_id}."

    criteria_csv_error:
      weight_not_number: "weight is not a number."

    criteria:
      upload:
        error:
          invalid_format: "The following criteria had invalid format:"
          names_taken:    "The following criteria names are already taken:"
        empty_error:     "No criteria were found in the provided file."
      errors:
        messages:
          name_taken:             "Criterion name already used."
          assignment_association: "Association is not strong with an assignment."
          input_number:           "Must be a number greater than 0.0."
          released_marks:         "Cannot update criteria for an assignment with released marks"

    key_pairs:
      title: "Key Pairs"
      key_pairs_title:         "Your Key Pairs"
      time_of_upload:         "Time Of Upload"
      key_content:         "Key Content"
      new_key_pair:         "New Key Pair"
      add_key_pair:         "Add a Key Pair"
      remove_key:         "Remove Key"
      are_you_sure:         "Are you sure?"
      file:         "File"
      or:         "OR"
      copy_paste_key:         "Copy and paste your public key"
      create_key_pair:         "Create Key Pair"
      back:         "Back"
      create:
        success: "Key Pair was created successfully"
        invalid_key: "Key Pair was not created: Invalid key"
      update:
        success: "Key Pair was updated successfully"
      delete:
        success: "Key Pair was removed successfully"

    section:
      help:
        manage_users: "You can create new sections or delete sections that are empty (the numbers in parentheses represent the number of students in each section). To add students to a section, use the Users view."


    keybinding:
      keyboard_help:          "Keyboard Shortcut Help"
      toggle_compact:         "Toggle compact view"
      next_criterion:         "Select next criterion"
      previous_criterion:     "Select previous criterion"
      next_level:             "Select next level"
      previous_level:         "Select previous level"
      confirm_level:          "Confirm level"
      when_rubric:            "(When on rubric) "
      open_annotation:        "Open annotation modal"
      confirm_annotation:     "Confirm annotation"


    #app/views/assignments/_read.html.erb
    no_grader_assigned: "Default grader: Course instructor(s)"
    additional_information: "Additional Information"

    #app/views/job_messages/_job_poller.js.erb
    job_poller:
      processing_message: "Processing:"
      processing_message_error: "Processing Failed:"

    #lib/validators/
    date_validator:
      invalid_date: "is not a valid date"

    #Test Framework
    automated_tests:
      title: "Automated Testing"
      testing_disabled: "Automated testing is not enabled for this assignment"
      automated_tests: "Test Framework"
      test_results: "Test Results"
      no_results: "No test results to display"
      student_tests: "Student Tests"
      need_group_for_test: "You must have a group to run a test"
      information: "Information"
      run_tests: "Run tests"
      stop_test: "Stop test"
      stop_batch: "Stop batch"
      tests_running: "Running tests. Please refresh this page in a bit to view the results."
      need_one_file: "You need at least one file submitted in order to run tests."
      need_submission: "Submissions must be collected before tests are run. Not all selected groupings had tests run."
      convert_newline_notice: "Newline characters in %{file} converted to \\n"
      new_test_script_file: "New Test Script File"
      new_test_support_file: "New Test Support File"
      assignment_test_script_files: "Test Script Files"
      assignment_test_support_files: "Test Support Files"
      filename_exists: "has already been taken"
      duplicate_filename: "Attempted to upload the following filename more than once: "
      tokens_available_on: "Tokens available starting on"
      download_wrong_place_or_unreadable: "The requested file is not in the expected directory or could not be read."
      download_not_in_db: "The requested file is not in the database."
      script_option:
        upload_required: "Upload <span class='required_field'>*</span>"
        upload_help: "The new file name must not exist already"
        replace: "Update"
        replace_help: "The updated file name can be the same as the current one"
        remove_file: "Remove this file"
        remove_file_help: "Check this box and press submit at the bottom to delete the file"
        display_settings: "Display Settings:"
        description: "Description"
        timeout: "Timeout (seconds) <span class='required_field'>*</span>"
        timeout_help: "The number of seconds before the script is forced to stop"
        run_by_instructors: "Runnable by Instructors"
        run_by_instructors_help: "Check to allow instructors to run this script (instructor tests, visible to students only after releasing marks)"
        run_by_students: "Runnable by Students"
        run_by_students_help: "Check to allow students to run this script (student tests, requires explicitly enabling them at the top of the page)"
        halts_testing: "Halt On Failure"
        associated_criterion: "Associated Criterion"
        display_description: "Test Description"
        display_run_status: "Run Status"
        display_marks_earned: "Marks Earned"
        display_input: "Test Input"
        display_expected_output: "Expected Output"
        display_actual_output: "Test Output to Students"
        display_actual_output_help: "Choose when to show the test 'OUTPUT' column to the students (the instructors will always see it regardless of this setting)"
        display_option:
           do_not_display: "Never display"
           display_after_submission: "Always display (student tests + instructor tests)"
           display_after_collection: "Display only for student tests"
      token:
        start_date: "Tokens available starting on:"
        available: "Tokens available:"
        unlimited: "Unlimited"
        per_period: "Tokens per %{period} hour(s):"
        tokens_form: "Tokens available per group"
        tokens_regenerate: "and regenerate every"
        hours: "hours"
        no_regeneration: "No regeneration"
      test_results_table:
        test_name: "Test Name"
        output: "Output"
        marks_earned: "Mark"
        marks_total: "Out of"
        status: "Status"
        extra_info: "Extra Info:"
        run_by: "Run by"
      results:
        all_tests: "All tests"
        unknown_test: "Unknown test"
        missing_test_script: "This test script is missing from the test run"
        no_source_files: "There are no student files to run the tests"
        bad_server: "Server '%{hostname}' error: %{error}"
        bad_results: "Test results are malformed: %{error}"
        no_tests: "Test results are empty"
        timeout: "%{seconds} seconds timeout expired (previous marks in this test script will not count)"
        bad_marks_earned: "Earned marks are missing"
        bad_marks_total: "Total marks are missing"
        bad_status: "Unrecognized test status '%{status}'"
        extra_raw_output: "Raw test run output: \n%{extra}\n"
        extra_stderr: "Messages on stderr: \n%{extra}\n"
        extra_malformed: "Malformed results discarded by server: \n%{extra}\n"
        extra_hooks_stderr: "Hooks errors: \n%{extra}\n"

#Missing Activerecord Translations for english
    datetime:
      distance_in_words:
        less_than_x_seconds:
          zero: "less than one second"
        less_than_x_minutes:
          zero: "less than one minute"

    support:
      array:
        sentence_connector: "and"
        skip_last_comma: true

    server_time: "Server Time:"

    poll_job:
      working_message: "%{progress} out of %{total}"
      queued: "Queued"
      completed: "Completed"
      failed: "Failed"
      split_pdf_job: "Processing page %{progress} out of %{total} for %{exam_name}"
      generate_job: "Generating copy %{progress} of %{total} for %{exam_name}"
      create_individual_groups_job: "%{progress}/%{total} groups created"
      uncollect_submissions_job: "Uncollecting assignments ... "
      submissions_job: "%{progress}/%{total} Submissions collected"
    repo:
      commits:
        assignment_folder: "Create assignment folder for %{assignment}"
        initial: "Initial commit"
        default: "Update files"
        required_files: "Update the list of required files for assignment %{assignment}"
        starter_code: "Update starter code files for assignment %{assignment}"
