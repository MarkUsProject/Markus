en:
    choose_language:    "Language:"
    answer_yes:         "Yes"
    answer_no:          "No"
    markus:             "MarkUs"
    close:              "Close"
    password:           "Password"
    all:                "All"
    none:               "None"
    and:                " and "
    search:             "Search:"
    issues:             "GitHub issues list"
    actions:            "Actions"
    continue:           "Continue"

    # app/views/assignments/_form.html.erb
    required_file_warning: "Accept no other files besides the listed required files. This also restricts the file extensions."

    # app/views/main/login.html.erb
    welcome_to:         "Welcome to MarkUs!"
    welcome_to_markus:     "Welcome to MarkUs, the online marking tool, %{user_name}."
    log_in:             "Log in"
    logging_in:         "Logging in..."
    login_failed:       "Login failed"
    password_not_blank: "Your password must not be blank."
    username_not_blank: "Your username must not be blank."
    username_and_password_not_blank: "Your username and password must not be blank."
    session_expired:     "Your session has expired. Please log in"
    please_log_in:       "Please log in"

    # app/views/layouts/_header.html.erb
    log_out:            "Log out"
    clear_role_switch_session_link: "Cancel role switch"
    working:            "Loading"
    login_as:           "Login as"

    # app/views/main/_about_content.html.erb
    about_markus:       "About MarkUs"
    version:            "Version"
    using_markus_version:       "You are using MarkUs version: "
    using_ruby_version: "Ruby version: "
    using_rails_version: "Rails version: "
    license:            "License"
    markus_license_OSI: "MarkUs is made available under the <a href=\"http://www.opensource.org\">OSI</a>-approved <a href=\"http://www.opensource.org/licenses/mit-license.html\">MIT license</a>."
    markus_license_permission:  "Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:"
    markus_copyright_intro:     "The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software."
    markus_no_warranty: "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
    markus_copyright:   "Copyright (c) 2008-2011 by the authors."
    markus_credits:     "Credits"
    markus_credits_thanks:      "Thanks to everyone who contributed to and made MarkUs possible. In particular to:"
    supervisors:        "Supervisors: "
    contact_us:         "Contact Us"
    email_more_info:    "E-mail: <a href=\"mailto:info@markusproject.org\">info@markusproject.org</a> or <a href=\"mailto:markus-users@cs.toronto.edu\">markus-users@cs.toronto.edu</a><br>Please visit: <a href=\"http://www.markusproject.org/\">http://www.markusproject.org/</a> for more information.<br>To submit a bug or issue please visit <a href=\"https://github.com/MarkUsProject/Markus/issues\">https://github.com/MarkUsProject/Markus/issues</a>"

    # app/views/main/timeout_imminent.js.erb
    timeout_imminent:   "Your session is about to expire: you will be logged out shortly. Press the Continue button or refresh the current page in the next few seconds to remain logged in"

    # app/views/api/_key_display.html.erb
    api_key:            "Your API Key"
    api_key_unavailable:        "Unavailable"
    reset_api_key:        "Reset my API key"
    api_key_help: "The API key is used for the REST interface for authentication. See <a href=\"https://github.com/MarkUsProject/Markus/wiki/RESTfulApiDocumentation\">MarkUs Wiki</a> for information on how to use the REST API."

    # app/views/layouts/_menu.html.erb
    dashboard:          "Dashboard"
    home:               "Home"
    settings:           "Settings"

    # app/views/shared/_assignments_dropdown.html.erb
    quick_links:  "Quick links"

    # app/models/assignment_file.rb
    validation_messages:
      format_of_assignment_file: "must include alphanumeric, '.', '-', '_' or '/' characters only"

    # app/views/main/index.html.erb
    switch_role:         "Switch Role"
    admin_password:      "Admin Password"
    cannot_login_as_another_admin: "You cannot log in as another admin."

    # app/views/assignments/_list_manage.html.erb
    due:                       "Due date"
    no_assignments:            "There are currently no assignments."

    # app/views/assignments/
    name: "Name"
    filename:  "Filename"
    message:  "Message"
    remove:  "Remove"
    csv_grade_report:  "CSV grades report"
    days_and_hours_left:      "(%{days} day(s) and %{hours} hour(s) left)"
    hours_and_minutes_left:   "(%{hours} hour(s) and %{minutes} minute(s) left)"
    days_left:          "(%{days} day(s) left)"
    short_identifier:   "Short Identifier"
    description:        "Description"
    shortened_date:     "Date"
    due_date:           "Due Date"
    remove_date:        "Remove Date"
    create_new_scanned_assignment:  "Add Scanned Assignment"
    manage_course_work: "Manage Course Work"
    repository_folder:  "Repository Folder"
    incorrect_format:   "Incorrect format"
    assignment:
        hidden: "%{assignment_text} (hidden)"
        assignment: "Assignment %{short_identifier}"
        required_fields: "Required Fields"
        name:           "Assignment Name"
        due_date:       "Due Date"
        short_identifier:   "Short Identifier"
        update_success:        "Successfully updated the assignment"
        create_success:        "Successfully created the assignment"
        rules:           "Assignment Rules"
        edit:           "Edit Assignment: "
        required_files:  "Required files"
        required_files_read:  "Required files"
        no_required_files_read:  "There are no required files for this assignment."
        required_files_by_student:  "Add filename(s) that students would be required to submit:"
        add_required_file:  "Add a Required File"
        download: "Download Assignments"
        type:  "Assignment type"
        upload_file_requirement: "The list of uploaded files does not match the required files for this assignment."
        section_due_dates_type: "Enable section due dates"
        group:
            assign_over_limit: "You have assigned more than the maximum number of students to group %{group}"
            grace_day_over_limit: "You have assigned one or more students who has less grace period credits than the amount already used by group %{group} for this assignment"
            select_a_grader: "Select a grader"
            select_a_criterion: "Select at least one criterion"
            group_submission_no_files: "One or more of the groups selected has no files in their submission. Grader not assigned."
            work_in_groups:  "Students can work in groups"
            persist_group_from: "Persist Groups from"
            properties:  "Group Properties"
            students_allowed_form_groups:  "Allow students to form their own groups"
            limit_min:  "Group Limit (must be 1 or more): minimum students per group:"
            limit_max:  "Maximum students per group:"
            name_autogenerated:  "Automatically generate group names"
            clone_warning:
                no_active_students: "Group '%{group}' not cloned: zero active students left"
                no_member: "Member '%{member}' not added to Group '%{group}': %{error}"
                other: "Group '%{group}' not cloned: %{error}"
        remark:
            rules:  "Remark Request Rules"
            allow:  "Allow remark requests"
            due_date:  "Remark Due Date"
            message:   "Remark Message"
        starter_code: "Starter Code"
        starter_code_edit_html: "Starter code files you upload will be automatically added to every new group's repositories. However, you can only add starter code files if no groups have been created yet for this assignment."
        starter_code_read_only: "Because at least one group exists for this assignment, you may not modify any starter code files at this point."
        help:
            assignment_form:
                properties: "Short Identifier: This is the title that will be used in menus, and default repository folder name. Because it is used for a directory name, it shouldn't contain spaces.<br />Assignment Name: Longer descriptive name, used as assignment title.<br />Message: Additional text displayed to students: additional information or instructions can go here.<br />Separate Section Due Dates: if checked, each sections can have a different due date.<br />Due Date: visible to students when they view assignment. Used to determine which version of a student's submission to grade. Can be changed later (e.g., for extensions). Changing the due date after assignments have been collected will not affect collected assignments.<br />Repository Folder: usually the Short Identifier.<br />Allow Web Submits: if unchecked, students must use a version control system to submit files and will not see the web submission view.<br />"
                required_files: "Students will see a warning message if they have not submitted files with the exact names of the required files. However, they will be permitted to submit files that do not match the required file names."
                assignment_type: "Persist Groups/Properties from ___: use the same groups and repositories from previous assignment. If selected, assignment folders will be created for every group immediately, rather than when a student clicks on the assignment for the first time.<br />If students can form their own groups, group names are always autogenerated. You can also create groups manually or by uploading a file."
                submission_rules: "Several different late submission policies are available. If Accept no late submissions is selected then students will be warned that their submission will not be graded if they attempt to submit after the deadline.  You may choose to give students some number of Grace credits in the Users view, and you can choose the grace period times here.  The Penalty Decay formula allows you to deduct X marks for every Y time period.  The Penalty Formula allows you to specify both the value of the penalty and the time period. If students are working in a group, grace credits will be deducted from every group member."
                remark_request_rules: "If remark requests are allowed, students will see a form they can fill in to request a remark after the marks have been released. Submitted remark requests are visible in the Submissions view. When responding to a remark request, you will see the original marks and your modifications. You will be able to add new annotations and comments. When you release the remark results, the students will see the updated marks and comments."
            graders: "Assign graders to specific student groups and criteria. By default, graders will be assigned to all criteria."
            assign_scans: "Assign students to scanned exam groups based on printed student names."
        allow_web_submits: "Allow web submits"
        vcs_submit: "Allow submits through version control"
        is_hidden: "Hide assignment from students"
        display_grader_names_to_students: "Display grader names to students"
        display_median_to_students: "Display assignment median to students"
        section_due_date_option:  "If the section due dates option is checked, students can only form groups within their section."
        section_due_dates_info:  "<b>Important</b> The global due date needs to be filled in. If a section has no due date specified, the global due date will be used instead. Students not assigned to any section will only be allowed to form groups with other students not assigned to any section."
        has_peer_review: "Enable student-to-student peer review"
        configure_peer_review: "Configure peer review"
        peer_review_record_missing: "Error: Peer review assignment missing from database"
        start_peer_review: "Peer Review"
        peer_review_results: "Peer Review Results"
        your_reviews: "Your Reviews"
        review: "Peer Review"
        batch_tests_status_table:
            test_runs_status: "Test Runs Status"
            in_progress: "in progress"
            test_run_complete: "Test run is complete"
            created_at: "Started"
            group_name: "Group Name"
            status: "Status"
            estimated_remaining_time: "Estimated Remaining Time"
            action: "Action"
    peer_review:
        assign: "Assign Peer Reviews"
        review: "Review "
        reviews: "Reviews"
        problem: "An unexpected problem occured"
        submission_nil_failure: "Submissions for original assignment need to be collected first"
        random_assign_failure: "Unable to randomly assign, too many reviews requested per selected reviewer/reviewees"
        number_of_reviews_header: "Num reviews"
        assigned_reviewers_header: "Assigned reviewers"
        reviewer_group: "Reviewer group"
        reviewee_group: "Reviewee group"
        reviews_made_on_submission: "Reviews made on your submission: "
        reviewers_reviews: "This reviewer's reviews: "
        view_ta_result: "View TA Result"
        empty_list_reviewers: "Cannot have an empty list of reviewers"
        empty_list_reviewees: "Cannot have an empty list of reviewees"
        cannot_allow_reviewer_to_be_reviewee: "A student cannot be a reviewer and reviewee"
        number_per_group: "Number of peer reviews per group"
        number_assigned_reviewers: "Num Assigned Reviewers"
        peer_review: "Peer Review"
        download:
            assigned_reviewers_header: "Download Peer Review Assignments"
            assigned_reviewers_csv: "Reviewer group to reviewee group CSV"
        upload:
            header: "Upload Peer Review CSV"
            description: "CSV file format:<br><code>result_id,group_name</code><br>"
    your_mark:  "Your mark:"

    members:            "Members"
    add_members:        "Add Members"
    remove_members:     "Remove Members"
    search_graders:     "Search Graders"
    add_graders:        "Add Graders"
    remove_graders:     "Remove Graders"
    remove_all_graders: "Remove All Graders"
    remove_grader:      "Remove Grader"
    add_new:            "Add New File"
    edit:               "Edit"
    save:               "Save"
    save_changes:       "Save Changes"
    skip:               "Skip"
    apply:              "Apply"
    delete:             "Delete"
    create:             "Create"
    bulk_action:        "Bulk action"
    submit_request:     "Submit Request to Instructor"
    submit:             "Submit"
    cancel:             "Cancel"
    cancel_remark:      "Cancel Remark Request"
    filters:            "Filters"
    all:                "All"
    hidden:             "Hidden"
    active:             "Active"
    not_active:         "Not active"
    choose_assignment:  "Choose..."
    properties:         "Properties"
    peer_reviews:       "Peer reviews"
    rubrics:            "Rubrics"
    marking_scheme:     "Marking Scheme"
    join:               "Join"
    refuse:             "Decline"
    invite:             "Invite"
    disinvite:          "Disinvite"
    help:               "Help"
    no_remark_result:   "Remark results are not yet available for this assignment."
    preview:            "Preview"
    encoding:           "Encoding"
    select_csv_file:    "Select a CSV file of the following form: <code>%{code}</code>"
    all_csv_file:       "All fields: "

    commit_after_due_date: "This commit is after the due date."
    past_due_date_edit_warning:  "WARNING:  The due date you have selected is in the past."
    past_start_date_edit_warning:  "WARNING:  The start date you have selected is in the past."
    past_due_date_edit_result_warning: "The %{href} of this group is after the due date."
    last_commit: "last commit"

    #app/views/assignments/grader_index.html
    grade_assignments: "Grade Assignments"

    #app/views/results/marker/
    marker:
      overall_comments_success: "Overall comments successfully updated."
      across_all_submission_files: "New: click on the filename to jump to the annotation. You can edit/remove annotations by right-clicking on them."
      source_code: "Source Code"
      test_results: "Test Results"
      feedback_files: "Feedback files"
      remark_request: "Remark Request"
      remark_submitted_on: "Remark Request Submitted On"
      remark_instructions: "Instructions for Remark Requests"
      remark_due_date:  "Remark Due Date"
      no_remark_due_date: "No due date assigned"
      past_remark_due_date: "It is already past the remark due date."
      about_remark_save: "Please note that the instructor will be unaware of your saved request unless it has been submitted."
      about_remark_submission: "Once a remark request has been submitted, you will not be able to see your original results until remark results are available. You will also not be able to edit the request."
      cancel_remark_to_change: "In order to change your request, you must cancel your existing request and create a new one."
      remark_submitted: "Your remark request has been submitted:"
      notes:                "Notes (<span id=\"number_of_notes\">%{notes}</span>)"
      include_annotations: "Include Annotations"
      include_annotations_warning: "Warning! Annotations on PDFs are not currently downloaded."
      marks:
        comment: "Comment"
        percentage: "Percentage"
        invalid_mark: "Invalid Mark!"
        add_extra_mark: "Add Extra Mark"
        mark: "Mark"
        marks: "Marks"
        summary: "Summary"
        tags: "Tags"
        current_tags: "Current Tags:"
        available_tags: "Available Tags:"
        tag_summary: "Top Tags Used:"
        new_tag: "Add New Tag..."
        delete_tag: "Delete Tags..."
        create_new_tag: "Create New Tag:"
        delete_tags: "Delete Tags:"
        expand_all: "Expand All"
        collapse_all: "Collapse All"
        expand_unmarked: "Expand Unmarked"
        confirm_remove_mark: "Are you sure you want to remove this extra mark?"
        confirm_remove_percentage: "Are you sure you want to remove this extra percentage?"
        subtotal: "Subtotal: "
        old_subtotal: "Old Subtotal: "
        bonus_deductions: "Bonus/Deductions"
        bonus_marks: "Bonus Marks:&nbsp;"
        deducted_marks: "Deducted Marks:&nbsp;"
        total_extra_marks: "Total Extra Marks:&nbsp;"
        total_extra_percentages: "Total Extra Percentage:&nbsp;"
        translated_to_points: "Translated to Points:"
        previous_mark: "Previous Mark&nbsp;"
        old: "Old: "
        show_old_marks: "Show Old Mark Summary"
      annotation:
        average_annotations: "%{average_annotations} annotations per marked submission"
        placeholder: "Markdown and basic LaTeX notation is supported"
        remark_flag: "(remark)"
        new_annotation: "Create new annotation"
        edit_annotation: "Edit annotation"
        preview: "Preview"
        preview_title: "Here's how the annotation will look:"
        sure_to_remove: "Are you sure you want to remove this annotation?"
        submit_edit: "Submit Edit"
        change_across_submissions: "This change will propogate across all submissions marked with this annotation.  Is this OK?"
        select_some_text: "You must select some source code text"
        select_an_area: "You should select an area on the image to annotate"
        select_an_area_pdf: "You should select an area on the PDF to annotate"
        provide_text:   "You must provide some annotation text"
        context_menu:
          new: "New Annotation"
          common: "Common Annotations"
          edit: "Edit"
          delete: "Remove"
          copy: "Copy"
          download: "Download File"
          download_annotated: "Download Annotated File"

    #app/views/results/common
    common:
      feedback_files: "Feedback Files"
      cant_display_image: "Image cannot be displayed. If you are trying to view a pdf file, please check if you have turned on pdf support. Click on the Download button to download the file instead"
      criterion_incomplete_error: "Unable to change marking status to complete, marks missing. Check the marking rubric and make sure that each criterion has been given a mark."

    seperate_multiple_with_commas:  "Seperate multiple user names with commas"
    csv_valid_format:   "There was a problem parsing the CSV file you uploaded.  Please ensure that it's a valid CSV format, and that each line ends with a carriage-return line-feed set of characters.  No changes were made. "
    csv_invalid_lines: "The following CSV lines were invalid: "
    csv_valid_lines: "Successfully uploaded %{valid_line_count} entries"
    csv_upload_user_duplicate: "Detected duplicate user name: %{user_name}"
    uncommitted_changes_warning: "Your changes are not yet saved, do you still want to navigate away?"
    discard_changes_message: "Are you sure you want to discard your changes?"
    cancel_remark_request: "Are you sure you want to cancel your remark request?  Your existing request will be deleted, and this cannot be undone."
    confirm_remark_submit: "Are you sure you want to submit your remark request?  You will not be able to see your results until remarking is finished."
    invalid_id: "must be an id that is an integer greater than 0"
    still_working_warning: "There are unfinished jobs still being processed.  They might not be saved if you leave now."

    csv:
      repo_collision_warning:  "Warning: Repository '%{repo_name}' exists already. Group name was: '%{group_name}'."
      line_nr_csv_file_prefix: "Line %{line_number} of CSV file:"
      group_to_grader:         "You must supply a CSV file for group to grader mapping"
      student_to_grader:       "You must supply a CSV file for student to grader mapping"
      invalid_csv:             "The format of the CSV file was not recognized"
      invalid_row:
        duplicate_entry: "Duplicate Entry"
        invalid_format: "Invalid Row Format"
      upload:
        # when a non-text file has a csv extension (ie: user changes extension
        # from .pdf to .csv on a pdf file)
        non_text_file_with_csv_extension: "The selected file is not a csv file (even though it may have a csv extension)."
      group_with_different_repo: "Error: Group %{group_name} cannot be created since a group with the same name and a different repository already exists"
      group_with_different_membership_current_assignment: "Error: Group %{group_name} cannot be created since a group with the same name but with different memberships already exists for the current assignment"
      group_with_different_membership_different_assignment: "Error: Group %{group_name} cannot be created since a group with the same name but with different memberships already exists for a different assignment"
      memberships_not_unique: "Error: Group %{group_name} cannot be created since student '%{student_user_name}' already belongs to a different group for the current assignment"
      repository_already_exists: "Error: Group %{group_name} cannot be created since a repository with path '%{repo_path}' already exists"
      member_does_not_exist: "Error: Group %{group_name} cannot be created since a student with username '%{student_user_name}' does not exist"

    browse_submissions:
      release_prs:          "Release Peer Reviews"
      unrelease_prs:        "Unrelease Peer Reviews"
      reviewer_name:        "Reviewer"
      reviewee_name:        "Reviewee"
      review_state:         "Review State"
      tags_used:            "Tags Used"
      tags_search:          "Search for Tags:"
      tags_list:            "Filter by Tag:"

    course_summaries_index:
        page_title:     "Summary"

    no_assignments_and_grade_entry_forms_message: "There are currently no assignments and marks spreadsheets."

    student_course_summary: "Your Term Marks"

    student_interface_assignments: "Your Assignments"

    groups:
      assign_scans:     "Assign Scans"
      skip_group:       "Skip group"
      graders: "Graders (%{graders})"
      lines_not_processed: "The following lines could not be processed:"
      done_assign: "All groups have been successfully assigned students"
      randomly_assign_graders: "Randomly assign Graders"
      upload:
        description: "CSV file format:<br><code>group_name,repository_name,user_name,<br>user_name ... </code><br>"
        importing: " Importing groups via CSV upload into MarkUs will destroy existing groups!"
        upload_grader_map: "Upload Group / Grader Map"
        upload_grader_criteria_map: "Upload Criteria / Grader Map"
        description_grader_map: "CSV file format:<br><code>group_name,grader_user_name,grader_user_name,... </code><br>"
        description_grader_criteria_map: "CSV file format:<br><code>criterion_name,grader_user_name,grader_user_name,... </code><br>"
        remove_existing_mappings: 'Remove existing mappings'
      download:
        download_grader_maps: "Download Grader Maps"
        download_grader_groups_csv: "Group / Grader map CSV format"
        download_grader_criteria_csv: "Criteria / Grader map CSV format"
      action:
        assign_grader: "Assign Grader(s)"
        unassign_grader: "Unassign Grader(s)"
      csv:
        could_not_find_source: "Could not find source assignment for cloning groups"
        could_not_find_target: "Could not find target assignment for cloning groups"

    results:
      review_title: "%{assignment_name} Peer Review for %{group_name} – review by %{reviewer_name}"
      successfully_changed: "Successfully updated %{changed} results"
      could_not_find_file: "Could not find %{filename} in repository %{repository_name}"

    mark:
      error:
        validate_criteria: "must be between 0 and the maximum mark of the criterion"

    rejected_invitation: "declined"

    #Sutdent's View (student)
    student:
      assignment: "Assignment %{short_identifier}"
      peer_assignment: "%{short_identifier}: Peer Reviews"
      group_information: "Group Information"
      group_not_valid: "Your group is not valid. You can't submit anything."
      overview: "Overview"
      last_revision_date: "Last Revision Date:<br><span class=\"info_date\">%{last_modified_date}</span>"
      files: "files"
      missing_required_files: "<span class=\"info_number\">%{missing_files}</span><span class=\"info %{style_class}\"> missing required file(s)</span>"
      no_peer_submission_yet: "You have no submissions to review yet."
      no_reviews: "No one has reviewed you yet."
      no_group_yet: "You don't have a group yet"
      not_allowed_to_form_group: "You are not allowed to form groups yourself for this assignment.
            Please wait until the instructor forms groups."
      invitations: "Invitations"
      invited_by: "You have been invited by %{inviter_first_name} <span class=\"last_name\">%{inviter_last_name}</span>"
      decline_invitation: "Are you sure you want to decline this invitation?"
      confirm_work_alone: "Are you sure you want to work alone? You cannot change this choice unless you contact your instructor."
      form_own_group: "Form your own group"
      form_group: "The groups must be from <strong>%{group_min}</strong> to <strong>%{group_max}</strong> people."
      decline_invitation2: "This will decline the invitation you have. Are you sure?"
      your_group: "Your Group"
      group_options: "Group Options"
      modification_limited: "At this point modification of your group is very limited.
            The due date and grace period (if any) have both passed."
      invite_more_students: " The group is not valid. You need to
            invite more students."
      working_alone: "You have asked to work alone on this assignment. If you change your mind and want to form or join a group, first delete your group."
      may_not_add_more: "You may not add more people to your group at this time."
      may_not_modify: "You may not modify your group at this time."
      group_not_deletable: "You must contact your instructor to remove the group."
      url_group_repository: "URL to your group's repository"
      group_properties: " Group Properties "
      students_can_form_groups: " Students can form groups. "
      invalid_override: "Instructor forms groups."
      student_work_alone: "Students work alone"
      invite: "Invite"
      please_wait: " Please wait..."
      work_alone: "Work alone"
      confirm_delete_group: "WARNING: You will lose access to your submitted files after deleting your group. Make sure you have a local copy of your files before clicking OK."
      delete_your_group: "Delete your group"
      delete_group: "Delete Group"
      disinvite_member: "Are you sure you want to uninvite this member?"
      member_disinvited: "Member disinvited"
      invited: "(invited)"
      inviter: "(inviter)"
      disinvite: "Uninvite"
      cancel_invitation: "Are you sure you want to cancel this invitation?"
      cancel_invitation_title: "Cancel invitation"
      section_groups_only: "You can invite only students of your section"
      submission:
        search_files: "Search files"
        file_manager: "%{short_identifier}: File Manager"
        current_path: "Current Path:"
        conflicts: "Conflicts"
        file_conflicts: "Your changes have not been made.  The following file conflicts were detected:"
        missing_files: "You still need to submit %{file} required file(s) for this assignment:"
        toggle_file_list: "click here to toggle the list of missing files."
        no_action_detected: "No actions were detected in the last submit.  Nothing was changed."
        no_marks_available: "No marks are available."
        external_submit_only: "MarkUs is only accepting external submits"
        invalid_file_name: "Invalid file name on submitted file"
        missing_file: "Could not download %{file_name}.  File may be missing."
        no_files_available: "No files available"
        no_groupings_available: "No group available"
        no_revision_available: "No revision available"
        expect_filter: "Expected a filter on select full"
        # DO NOT change 'file_name' and 'sanitized_filename' in the following message.
        # See app/views/submissions/_file_manager_boot.js.erb
        filename_sanitization_js_warning: "\"After you submit the filename will change from '\" + file_name + \"' to '\" + sanitized_filename + \"'. Is that OK?\""
        # DO NOT change 'file_name' and 'new_file_name' in the following message.
        # See app/views/submissions/_file_manager_boot.js.erb
        replace_file_js_error: "\"You cannot replace '\" + file_name + \"' with '\" + new_file_name + \"'. You must replace a file with a file which has the same name.\""
        version_control_warning: "Submitting files here overrides any changes made using version control. Make sure you have worked on the most recent files before submitting."
        empty_file_warning: "%{file_name} is empty"
        file_too_large: "The size of the uploaded file %{file_name} exceeds the maximum of %{max_size} MB."

    #Graders' View
    graders:
      assigned_graders:   "Assigned Graders"
      possible_graders:   "Possible Graders"
      unassigned_graders: "Unassigned Graders"
      not_covered:        "Not Covered"
      covered:            "Covered"
      coverage:           "Coverage"
      problem:            "There was a problem..."
      search_criteria:    "Search Criteria"
      assign_to_criteria: "Assign graders to individual criteria (if unselected, all graders will be able to edit all criteria)"
      lines_not_processed: "The following lines could not be processed:"
      skip_empty_submissions: "Do not assign Graders to groups with empty submissions (requires that submissions are collected)"
      download:
        begin_annotation: "%{comment_start} ANNOTATION %{id}: %{text} %{comment_end}"
        end_annotation: "%{comment_start} END ANNOTATION %{id} %{comment_end}"

    #Grade Entry Forms Graders' View
    marks_graders:
      download:
        download_grader_students_csv: "Student / Grader map CSV format"
      upload:
        upload_grader_map: "Upload Student / Grader Map"
        description_grader_map: "CSV file format:<br>
            <code>student_user_name,grader_user_name,grader_user_name,... </code><br>"

    add_student:
      success: "Student %{user_name} added."
      fail:
        general: "Something went wrong. Could not add %{user_name}."
        dne:  "Could not add %{user_name} - this student does not exist."
        hidden:  "Could not add %{user_name} - this student's account has been disabled."
        already_grouped: "Could not add %{user_name} - this student is already a member of another group."

    create_group:
      fail:
        due_date_passed: "Could not create group - the due date for this assignment has passed and there are either no grace periods allowed, or the grace period for this assignment has also passed."
        not_allow_to_form_groups: "Assignment does not allow students to form groups"
        already_have_a_group: "You already have a group, and cannot create another"
        can_not_work_alone: "You cannot work alone for this assignment - the group size minimum is %{group_min}"
        do_not_have_a_group: "You do not currently have a group"

    invite_student:
      success: "Invitations successful"
      fail:
        only_inviter: "Only the inviter can delete a declined invitation"
        due_date_passed: "Could not invite %{user_name} - the due date for this assignment has passed and there are either no grace periods allowed, or the grace period for this assignment has also passed."
        dne:  "Could not invite %{user_name} - this student does not exist."
        hidden:  "Could not invite %{user_name} - this student's account has been disabled."
        already_pending: "Could not invite %{user_name} - this student is already a pending member of this group."
        group_max_reached: "Could not invite %{user_name} - group maximum has been reached."
        inviting_self: "You cannot invite yourself to your own group."
        already_grouped: "Could not invite %{user_name} - this student is already a member of another group."
        need_to_create_group: "You must create a group before you can invite users"
        not_same_section: "Student %{user_name} is outside of your section."
        error: "Failed to invite student %{user_name}."
    update_files:
      success:  "Your changes have been made."

    tags:
      tags: "Tags"
      title: "Assignment Tags: %{assignment_short_identifier}"
      delete: "Delete Tag"
      search_tags: "Search for tags..."
      edit_tag: "Edit Tag..."
      edit_update: "Update"
      updating: "Updating..."

      messages:
        no_assigned: "--No Tags Assigned--"
        no_left: "--No More Tags to Assign--"
        no_tags: "--No Tags to Show--"

      create:
        create_new: "Add Tag"
        tag_prompt: "Tag name:"
        tag_description: "Tag description:"
        button_text: "Save Changes"
        name_prompt: "Enter tag name..."
        descript_prompt: "Enter tag description..."
        successful: "Tag created successfully!"
        error: "Tag could not be created."

      delete:
        delete_tags: "Delete Tags"
        tag_prompt: "Please select tags below to delete them:"

      upload:
        upload_success: "%{nb_updates} tag(s) have been successfully added!"
        invalid_line: "Line is in improper format."
        upload_csv_html: "
          <p>
            The file should have the following format:<br>
            <ul>
              <li>Only one record per line.
              <li>Each line should be terminated by a carriage-return line-feed.</li>
              <li>The tag name and description are only used. Any other data per line is ignored.</li>
            </ul>
            <code>tag_name,tag_description, ...</code><br><br>
            <i>tag_name</i> represents the name of the tag to be added.<br>
            <i>tag_description</i> represents the description for that record.<br>
          </p>"
        upload_yml_html: "
          <p>
            The file should have the following format:<br>
            <ul>
              <li>Only one record per line.
              <li>Each line should be terminated by a carriage-return line-feed.
              <li>All other fields in the file not specified below are ignored.
            </ul>
            <code>tag_id:<br>
              &nbsp;&nbsp;name: name<br>
              &nbsp;&nbsp;description: description<br>
              &nbsp;&nbsp;user:<br>
              &nbsp;&nbsp;&nbsp;&nbsp;id: id<br>
              [...]</code><br><br>
            <i>tag_name</i> represents the name of the tag to be added.<br>
            <i>tag_description</i> represents the description for that record.<br>
            <i>id</i> represents the user id associated with that tag.<br>
          </p>"
        error: "There was an error uploading tags: "
        empty_error: " The YAML file was empty."

      download:
        download_title: "Download Tags"
        download_html: "
          <p>
            This allows you to download the list of tags used for assignment <b>%{assignment_short_identifier}</b>.<br>
            They can be downloaded either in CSV or YML format.
          </p>"
        button_message: "Download in %{file_format} format"

      table:
        name: "Name"
        creator: "Creator"
        description: "Description"
        use: "Use"
        actions: "Actions"
        all: "All Tags"
        in_use: "Tags in Use"
        not_in_use: "Tags Not in Use"

    submission_file:
      error:
        no_access: "No access to submission file with id #%{submission_file_id}."
        binary_file_message: "Binary content: Use download button to view file!"
    test_result:
      error:
        no_access: "No access to test result with id #%{test_result_id}."
      button:
        load: "Load Results"
      no_files_available: "[No test results available]"
      loading_results: "Loading results..."
      running_tests: "Running Tests..."
      build_successful: "Tests Completed. View '%{logfile}' for details."
      build_failed: "Build Failed. View '%{logfile}' to investigate."
      build_error: "Unknown error with Ant. Is Ant correctly installed? View '%{logfile}' to investigate."

    feedback_file:
      error:
        no_access: "No access to feedback file with id #%{feedback_file_id}."
      no_files_available: "[No feedback file available]"

    csv_special_characters_html: "
    <p>If you wish to use a comma (,) in a CSV field, you should surround that whole field with double quotes (\").<br>
    If you wish to use double quotes in a CSV field, you should surround the field with double quotes and<br>
    double each one of your double quotes (\"\").</p>
    <p>Here's an example of a CSV field containing commas and double quotes:</p>
    <code>\"Code style \"\"poor\"\", but the intention was there.\"</code>"

    criteria_csv_error:
      incomplete_row: "contains too little information."
      name_not_unique: "criterion name already used in the current assignment."
      max_zero: "maximum value is zero or not a number."
      weight_not_number: "weight is not a number."

    criteria:
      upload:
        error:
          invalid_format: "The following criteria had invalid format:"
          names_taken:    "The following criteria names are already taken:"
        empty_error:     "No criteria were found in the provided file."
      errors:
        messages:
          name_taken:             "Criterion name already used."
          assignment_association: "Association is not strong with an assignment."
          assignment_id:          "Can only be whole number greater than 0."
          input_number:           "Must be a number greater than 0.0."
          released_marks:         "Cannot update criteria for an assignment with released marks"

    summary_table:
      title: "Title"
      grade: "Grade"

    key_pairs:
      title: "Key Pairs"
      key_pairs_title:         "Your Key Pairs"
      time_of_upload:         "Time Of Upload"
      key_content:         "Key Content"
      new_key_pair:         "New Key Pair"
      add_key_pair:         "Add a Key Pair"
      remove_key:         "Remove Key"
      are_you_sure:         "Are you sure?"
      file:         "File"
      or:         "OR"
      copy_paste_key:         "Copy and paste your public key"
      create_key_pair:         "Create Key Pair"
      back:         "Back"
      create:
        success: "Key Pair was created successfully"
        invalid_key: "Key Pair was not created: Invalid key"
      update:
        success: "Key Pair was updated successfully"
      delete:
        success: "Key Pair was removed successfully"

    course_summaries:
      model_name: "Course Summary"
      title: "Summary"

    marking_schemes:
      title: "Marking Schemes"
      name: "Name"
      add_new: "Add New Marking Scheme"
      edit: "Edit Marking Scheme"
      weight_label: "Weight for "
      table_modify_column: "Modify"

    notes:
        note_on: "%{user_name} on <strong>%{display_for}</strong>"
        add_new: "Add a new note"
        existing: "Existing Notes"
        comment: "Your comment"
        save: "Save Note"
        success: "Note saved succesfully"
        error: "Unable to save the note"
        title: "Notes"
        note: "Note"
        noteable: "Noteable"
        # visible options for dropdown. Symbols intentionally capitalized.
        noteables:
            Assignment: "Assignment"
        author: "Author"
        creation_time: "Creation Time"
        delete:
            link_title: "Delete this note"
            link_confirm: "This will remove this note permanently. Continue?"
            success: "Note was deleted successfully."
            error_permissions: "You do not have sufficient permissions to delete this note."
        new:
            note_message: "Notes message"
            title: "Create Note"
            loading_groupings: "Loading Groups..."
            loading_selector: "Loading selector..."
            invalid_selector: "Invalid selector chosen."
            no_noteables: "Notes are attached to groups, assignments, or students, but there are none yet. Please create one first."
        create:
            success: "Note was successfully created."
        edit:
            title: "Edit Note"
        update:
            success: "Note was successfully updated."
        help: "Notes can be created for students, groups, or assignments. They are visible to admins and graders, but not students."

    past_due_date_warning: "Due date for this assignment is in the past."
    past_due_date_notice: "Due date for this assignment is in the past for: "
    marking_started_warning: "Marking has already started for this assignment"

    section:
      help:
        manage_users: "You can create new sections or delete sections that are empty (the numbers in parentheses represent the number of students in each section). To add students to a section, use the Users view."


    keybinding:
      keyboard_help:          "Keyboard Shortcut Help"
      toggle_compact:         "Toggle compact view"
      next_criterion:         "Select next criterion"
      previous_criterion:     "Select previous criterion"
      next_level:             "Select next level"
      previous_level:         "Select previous level"
      confirm_level:          "Confirm level"
      when_rubric:            "(When on rubric) "
      open_annotation:        "Open annotation modal"
      confirm_annotation:     "Confirm annotation"


    #app/views/assignments/_read.html.erb
    no_grader_assigned: "Default grader: Course instructor(s)"
    locale_not_available: "%{locale} translation not available!"
    external_authentication_not_supported: "External authentication not supported on your platform!"
    account_disabled: "This account has been disabled"
    additional_information: "Additional Information"

    #app/views/job_messages/_job_poller.js.erb
    job_poller:
      processing_message: "Processing:"
      processing_message_finished: "Finished Processing. Reloading..."
      processing_message_error: "Processing Failed:"

    #app/helpers/submissions_helper.rb
    assign_folder_missing:      "Uh oh! Assignment folder missing."
    group_repo_missing:         "Uh oh! No repo found for this group."

    #lib/validators/
    date_validator:
      invalid_date: "is not a valid date"

    #Test Framework
    automated_tests:
      title: "Automated Testing"
      testing_disabled: "Automated testing is not enabled for this assignment"
      automated_tests: "Test Framework"
      test_results: "Test Results"
      no_results: "No test results to display"
      expand_all: "Expand All"
      collapse_all: "Collapse All"
      enable_test: "Enable tests for this assignment"
      student_tests: "Student Tests"
      enable_student_tests: "Allow students to run tests"
      required_test_files: "Required files for testing"
      need_group_for_test: "You must have a group to run a test"
      test: "Test"
      script_name: "Script Name"
      test_parameters: "Test Script Options"
      revision_used_for_test: "<span class='prop_label'>Revision used:</span> %{revision}"
      information: "Information"
      run_tests: "Run tests"
      test_run_info: "Test run with id %{test_run_id} is in progress .. (created at: %{created_at})"
      stop_test: "Stop test"
      stop_batch: "Stop batch"
      test_run: "Test Run"
      tests_running: "Running tests. Please refresh this page in a bit to view the results."
      need_one_file: "You need at least one file submitted in order to run tests.<br><br>If you have already submitted a file and want to run tests on it, use the \"Run Tests\" button below."
      need_submission: "Submissions must be collected before tests are run. Not all selected groupings had tests run."
      collect_and_test: "Collect and Prepare Test"
      date_run: "Date run:"
      revision_used: "Revision used:"
      add_test_script_file_link: "Add Test Script File"
      add_test_support_file_link: "Add Test Support File"
      add_test_script_file_alert: "You must enable tests for this assignment to add a test script file."
      add_test_support_file_alert: "You must enable tests for this assignment to add a test support file."
      convert_newline_notice: "Newline characters in %{file} converted to \\n"
      new_test_script_file: "New Test Script File"
      new_test_support_file: "New Test Support File"
      assignment_test_script_files: "Test Script Files"
      assignment_test_support_files: "Test Support Files"
      filename_exists: "has already been taken"
      duplicate_filename: "Attempted to upload the following filename more than once: "
      tokens_available_on: "Tokens available starting on"
      dir_not_exist: "The directory %{dir} required for Ant does not exist"
      download_wrong_place_or_unreadable: "The requested file is not in the expected directory or could not be read."
      download_not_in_db: "The requested file is not in the database."
      script_option:
        upload_required: "Upload <span class='required_field'>*</span>"
        upload_help: "The new file name must not exist already"
        replace: "Update"
        replace_help: "The updated file name can be the same as the current one"
        remove_file: "Remove this file"
        remove_file_help: "Check this box and press submit at the bottom to delete the file"
        run_settings: "Run Settings:"
        display_settings: "Display Settings:"
        description: "Description"
        update_description: "Enter Description Here"
        seq_num: "UPDATE ME: seq_num"
        timeout: "Timeout (seconds) <span class='required_field'>*</span>"
        timeout_help: "The number of seconds before the script is forced to stop"
        run_by_instructors: "Runnable by Instructors"
        run_by_instructors_help: "Check to allow instructors to run this script (instructor tests, visible to students only after releasing marks)"
        run_by_students: "Runnable by Students"
        run_by_students_help: "Check to allow students to run this script (student tests, requires explicitly enabling them at the top of the page)"
        halts_testing: "Halt On Failure"
        associated_criterion: "Associated Criterion"
        display_description: "Test Description"
        display_run_status: "Run Status"
        display_marks_earned: "Marks Earned"
        display_input: "Test Input"
        display_expected_output: "Expected Output"
        display_actual_output: "Test Output to Students"
        display_actual_output_help: "Choose when to show the test 'OUTPUT' column to the students (the instructors will always see it regardless of this setting)"
        display_option:
           do_not_display: "Never display"
           display_after_submission: "Always display (student tests + instructor tests)"
           display_after_collection: "Display only for student tests"
      token:
        tokens_form: "Tokens available per group"
        tokens_regenerate: "and regenerate every"
        token_start_date: "<span class=\"prop_label\">Tokens available starting on:</span> %{date}"
        tokens_per_period: "<span class=\"prop_label\">Tokens per %{regeneration_period} hour(s):</span> %{tokens}"
        tokens_not_given_yet: "<span class=\"prop_label\">Tokens available:</span> No tokens given yet"
        tokens_no_more_available: "<span class=\"prop_label\">Tokens available:</span >No more tokens available "
        tokens_available: "<span class=\"prop_label\">Tokens available:</span> %{tokens}"
        unlimited_tokens: "<span class=\"prop_label\">Tokens available:</span> Unlimited"
        unlimited: "Unlimited"
        hours: "hours"
      test_results_table:
        time: "Time"
        test_runs: "Runs"
        file_name: "File Name"
        test_name: "Test Name"
        input: "Input"
        output: "Output"
        expected: "Expected"
        marks_earned: "Mark"
        marks_total: "Out of"
        marks_bonus: "bonus"
        status: "Status"
        pass: "Passed"
        partial: "Partially Passed"
        fail: "Failed"
        error: "Error"
      error:
        not_enabled: "Tests are not enabled for this assignment"
        ta_not_allowed: "Graders are not allowed to run tests"
        bad_group: "Your group is not valid or you do not have one yet"
        no_tokens: "You do not have tokens to run the tests"
        no_test_files: "There are no test scripts to run the tests"
        already_enqueued: "You have a test already enqueued for execution, please wait for the results"
        after_due_date: "You cannot run tests as the due date for this assignment has passed"
      results:
        all_tests: "All tests"
        unknown_test: "Unknown test"
        unknown_test_script: "Unknown test script"
        missing_test_script: "This test script is missing from the test run"
        no_source_files: "There are no student files to run the tests"
        bad_server: "Server '%{hostname}' error: %{error}"
        bad_results: "Test results are malformed: %{error}"
        no_tests: "Test results are empty"
        timeout: "%{seconds} seconds timeout expired (previous marks in this test script will not count)"
        bad_marks_earned: "Earned marks are missing"
        bad_marks_total: "Total marks are missing"
        bad_status: "Unrecognized test status '%{status}'"
        extra_raw_output_html: "Raw test run output:<br />%{extra}<br />"
        extra_stderr_html: "Messages on stderr:<br />%{extra}<br />"
        extra_malformed_html: "Malformed results discarded by server:<br />%{extra}<br />"

#Missing Activerecord Translations for english
    datetime:
      distance_in_words:
        less_than_x_seconds:
          zero: "less than one second"
        less_than_x_minutes:
          zero: "less than one minute"

    support:
      array:
        sentence_connector: "and"
        skip_last_comma: true

    server_time: "Server Time:"

    poll_job:
      working_message: "%{progress} out of %{total}"
      queued: "Queued"
      completed: "Completed"
      failed: "Failed"
      split_pdf_job: "Processing page %{progress} out of %{total} for %{exam_name}"
      generate_job: "Generating copy %{progress} of %{total} for %{exam_name}"
      create_individual_groups_job: "%{progress}/%{total} groups created"
      uncollect_submissions_job: "Uncollecting assignments ... "
      submissions_job: "%{progress}/%{total} Submissions collected"
