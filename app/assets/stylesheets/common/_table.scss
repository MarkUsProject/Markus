@import 'constants';

// These styles are partially derived from React Table v6.
// https://github.com/TanStack/table/blob/v6/src/index.styl

:root {
  --easeOutQuad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
  --easeOutBack: cubic-bezier(0.175, 0.885, 0.32, 1.275);
  --expandSize: 7px;
}

.Table {
  position: relative;
  display: flex;
  flex-direction: column;
  border: 1px solid rgba(0, 0, 0, 0.1);

  * {
    box-sizing: border-box;
  }

  .rt-table {
    flex: auto 1;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    width: 100%;
    border-collapse: collapse;
    overflow: auto;
  }

  .rt-thead {
    flex: 1 0 auto;
    display: flex;
    flex-direction: column;
    user-select: none;
    border-bottom: 1px solid $gridline;
    border-left: 1px solid $gridline;
    border-right: 1px solid $gridline;
    overflow-x: hidden;
    overflow-y: scroll;

    &.-headerGroups {
      background: rgba(0, 0, 0, 0.03);
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }

    &.-filters {
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);

      input,
      select {
        background-color: $background-main;
        border: 1px solid $gridline;
        color: $sharp-line;
        padding: 5px 7px;
        font-size: inherit;
        border-radius: 3px;
        font-weight: normal;
        outline-width: 0;
      }

      .rt-th {
        border-right: 1px solid rgba(0, 0, 0, 0.02);
        border-bottom: 1px solid $gridline;
      }
    }

    &.-header {
      box-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.15);
    }

    .rt-tr {
      text-align: center;
    }

    .rt-th,
    .rt-td {
      background-color: $background-support;
      border-top: 1px solid $gridline;
      color: $line;
      padding: 5px;
      line-height: normal;
      position: relative;
      border-right: 1px solid rgba(0, 0, 0, 0.05);
      transition: box-shadow 0.3s var(--easeOutBack);
      box-shadow: inset 0 0 0 0 transparent;

      &.-sort-asc {
        box-shadow: inset 0 3px 0 0 $sharp-line;
      }

      &.-sort-desc {
        box-shadow: inset 0 -3px 0 0 $sharp-line;
      }

      &.-cursor-pointer {
        cursor: pointer;
      }

      &:last-child {
        border-right: 0;
      }
    }

    .rt-th:focus {
      outline-width: 0;
    }

    .rt-td {
      border-bottom: 1px solid $gridline;
      padding: 0;
    }

    .rt-hidden {
      border-bottom: 1px solid $gridline;
      padding: 0;
    }

    .rt-resizable-header {
      overflow: visible;

      &:last-child {
        overflow: hidden;
      }
    }

    .rt-resizable-header-content {
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .rt-header-pivot {
      border-right-color: #f7f7f7;

      &::after,
      &::before {
        left: 100%;
        top: 50%;
        border: solid transparent;
        content: ' ';
        height: 0;
        width: 0;
        position: absolute;
        pointer-events: none;
      }

      &::after {
        border-color: rgba(255, 255, 255, 0);
        border-left-color: #fff;
        border-width: 8px;
        margin-top: -8px;
      }

      &::before {
        border-color: rgba(102, 102, 102, 0);
        border-left-color: #f7f7f7;
        border-width: 10px;
        margin-top: -10px;
      }
    }
  }

  .rt-tbody {
    flex: 99999 1 auto;
    display: flex;
    flex-direction: column;
    overflow: auto;
    border-bottom: 1px solid $gridline;
    border-left: 1px solid $gridline;
    border-right: 1px solid $gridline;
    overflow-x: hidden;
    overflow-y: scroll;

    .rt-tr-group {
      border-bottom: solid 1px rgba(0, 0, 0, 0.05);

      &:last-child {
        border-bottom: 0;
      }
    }

    .rt-td {
      border-right: 1px solid rgba(0, 0, 0, 0.02);
      border-bottom: 1px solid $gridline;

      &:last-child {
        border-right: 0;
      }
    }

    .rt-expandable {
      cursor: pointer;
      text-overflow: clip;

      &:empty {
        cursor: default;
      }
    }
  }

  .rt-tr-group {
    flex: 1 0 auto;
    display: flex;
    flex-direction: column;
    align-items: stretch;
  }

  .rt-tr {
    flex: 1 0 auto;
    display: inline-flex;
  }

  .rt-th,
  .rt-td {
    flex: 100 0 auto;
    white-space: nowrap;
    text-overflow: ellipsis;
    padding: 7px 5px;
    overflow: hidden;
    transition-property: width, min-width, padding, opacity;

    &.-hidden {
      width: 0 !important;
      min-width: 0 !important;
      padding: 0 !important;
      border: 0 !important;
      opacity: 0 !important;
    }

    &.-wrap {
      white-space: initial;
    }
  }

  .rt-td:last-child {
    padding-right: 22px;
  }

  .rt-expander {
    display: inline-block;
    position: relative;
    margin: 0 10px;
    color: transparent;

    &::after {
      content: '';
      position: absolute;
      width: 0;
      height: 0;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) rotate(-90deg);
      border-left: 5.04px solid transparent;
      border-right: 5.04px solid transparent;
      border-top: 7px solid $sharp-line;
      transition: all 0.3s var(--easeOutBack);
      cursor: pointer;
    }

    &.-open::after {
      transform: translate(-50%, -50%) rotate(0deg);
    }
  }

  .rt-resizer {
    display: inline-block;
    position: absolute;
    width: 36px;
    top: 0;
    bottom: 0;
    right: -18px;
    cursor: col-resize;
    z-index: 10;
  }

  .rt-tfoot {
    flex: 1 0 auto;
    display: flex;
    flex-direction: column;
    box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.15);

    .rt-td {
      border-right: 1px solid rgba(0, 0, 0, 0.05);

      &:last-child {
        border-right: 0;
      }
    }
  }

  &.-striped .rt-tr.-odd {
    background: rgba(0, 0, 0, 0.03);
  }

  &.-highlight .rt-tbody .rt-tr:not(.-padRow):hover {
    background: rgba(0, 0, 0, 0.05);
  }

  .-pagination {
    z-index: 1;
    display: flex;
    justify-content: space-between;
    align-items: stretch;
    flex-wrap: wrap;
    padding: 3px;
    box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.1);
    border-top: 2px solid rgba(0, 0, 0, 0.1);

    input,
    select {
      border: 1px solid rgba(0, 0, 0, 0.1);
      padding: 5px 7px;
      font-size: inherit;
      border-radius: 3px;
      font-weight: normal;
      outline-width: 0;
    }

    .-btn {
      appearance: none;
      display: block;
      width: 100%;
      height: 100%;
      border: 0;
      border-radius: 3px;
      padding: 6px;
      font-size: 1em;
      color: rgba(0, 0, 0, 0.6);
      background: rgba(0, 0, 0, 0.1);
      transition: all 0.1s ease;
      cursor: pointer;
      outline-width: 0;

      &[disabled] {
        opacity: 0.5;
        cursor: default;
      }

      &:not([disabled]):hover {
        background: rgba(0, 0, 0, 0.3);
      }
    }

    .-previous,
    .-next {
      flex: 1;
      text-align: center;
    }

    .-center {
      flex: 1.5;
      text-align: center;
      margin-bottom: 0;
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      align-items: center;
      justify-content: space-around;
    }

    .-pageInfo {
      display: inline-block;
      margin: 3px 10px;
      white-space: nowrap;
    }

    .-pageJump {
      display: inline-block;

      input {
        width: 70px;
        text-align: center;
      }
    }

    .-pageSizeOptions {
      margin: 3px 10px;
    }
  }

  .rt-noData {
    display: block;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    background: $background-support;
    color: $sharp-line;
    transition: all 0.3s ease;
    z-index: 1;
    pointer-events: none;
    padding: 20px;
  }

  .-loading {
    display: block;
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    background: rgba(255, 255, 255, 0.8);
    transition: all 0.3s ease;
    z-index: -1;
    opacity: 0;
    pointer-events: none;

    > div {
      position: absolute;
      display: block;
      text-align: center;
      width: 100%;
      top: 50%;
      left: 0;
      font-size: 15px;
      color: rgba(0, 0, 0, 0.6);
      transform: translateY(-52%);
      transition: all 0.3s var(--easeOutQuad);
    }

    &.-active {
      opacity: 1;
      z-index: 2;
      pointer-events: all;
      background-color: $background-support;
      border-color: $line;
      color: $sharp-line;

      > div {
        transform: translateY(50%);
      }
    }

    &.-inner {
      background-color: $background-support;
      border-color: $line;
      color: $line;
    }
  }

  .rt-resizing {
    .rt-th,
    .rt-td {
      transition: none !important;
      cursor: col-resize;
      user-select: none;
    }
  }

  .hide-rt-expander {
    &.rt-expandable {
      cursor: default;
    }

    .rt-expander {
      display: none;
    }
  }

  &.auto-overflow {
    .rt-thead,
    .rt-tbody {
      overflow-y: auto;
    }

    .rt-td:last-child {
      padding-right: 5px;
    }
  }

  &.display-block {
    display: block;

    .rt-table,
    .rt-tbody {
      display: block;
    }
  }
}

.ReactTable {
  .rt-noData {
    background: $background-support;
    color: $sharp-line;
  }

  .rt-thead,
  .rt-tbody {
    border-bottom: 1px solid $gridline;
    border-left: 1px solid $gridline;
    border-right: 1px solid $gridline;
    overflow-x: hidden;
    overflow-y: scroll;
  }

  .rt-thead .rt-hidden,
  .rt-hidden,
  .rt-thead .rt-td {
    border-bottom: 1px solid $gridline;
    border-right: 1px solid $gridline;
    padding: 0;
  }

  .rt-thead.-filters input {
    background-color: $background-main;
    border: solid 1px $gridline;
    color: $sharp-line;
  }

  .rt-thead.-filters select {
    background-color: $background-main;
    border: solid 1px $gridline;
    color: $sharp-line;
  }

  .-loading.-active {
    background-color: $background-support;
    border-color: $line;
    color: $sharp-line;
  }

  .rt-expandable:empty {
    cursor: default;
  }

  .rt-expander::after {
    border-top-color: $sharp-line;
  }

  .hide-rt-expander {
    &.rt-expandable {
      cursor: default;
    }

    .rt-expander {
      display: none;
    }
  }

  .-loading.-inner {
    background-color: $background-support;
    border-color: $line;
    color: $line;
  }

  .rt-thead.-filters .rt-th {
    border-bottom: 1px solid $gridline;
    border-right: 1px solid $gridline;
  }

  .rt-tbody .rt-td {
    border-bottom: 1px solid $gridline;
  }

  .rt-thead .rt-th.-sort-asc,
  .rt-thead .rt-td.-sort-asc {
    box-shadow: inset 0 3px 0 0 $sharp-line;
  }

  .rt-thead .rt-th.-sort-desc,
  .rt-thead .rt-td.-sort-desc {
    box-shadow: inset 0 -3px 0 0 $sharp-line;
  }

  .rt-thead .rt-th,
  .rt-thead .rt-td {
    background-color: $background-support;
    border-right: 1px solid $gridline;
    border-top: 1px solid $gridline;
    color: $line;
  }

  .rt-td:last-child {
    // Hack to ensure scrollbar doesn't cover cell contents.
    padding-right: 22px;
  }

  .rt-td.-wrap,
  .rt-th.-wrap {
    white-space: initial;
  }

  &.auto-overflow {
    .rt-thead,
    .rt-tbody {
      overflow-y: auto;
    }

    .rt-td:last-child {
      padding-right: 5px;
    }
  }

  &.display-block {
    display: block;

    .rt-table,
    .rt-tbody {
      display: block;
    }
  }
}

.rt-tr {
  min-height: 2em;
}

.rt-td {
  p:first-child {
    margin-top: 0;
  }
}

.rt-action-box {
  display: flex;
  justify-content: flex-end;
  line-height: 2.5em;
  margin-bottom: 1em;
  width: 100%;

  button,
  .button,
  .form-control {
    align-items: center;
    display: flex;
    height: 3em;
    justify-content: center;
    margin-left: 1em;
    min-width: 100px;
    padding: 0 0.4em;

    @include breakpoint(mobile) {
      min-width: 3em;
    }
  }
}

.rt-th.unassigned,
.rt-td.unassigned {
  background-color: $disabled-area;
  color: $line;
}

.rt-no-data {
  background-color: $background-support;
  margin: 0;
  padding: 1em 0;
  text-align: center;
}

.rt-th > select {
  margin: 0;
}

.rt-cell-textarea {
  display: block;
  margin-bottom: 1em;
  width: 100%;
}

// Additional custom styles
.loading-spinner {
  padding: 10px 0;
  text-align: center;
}
