<% content_for :head do %>
  <%= stylesheet_link_tag 'grader',
                          'jquery-ui' %>
  <%= javascript_pack_tag 'result' %>
<% end %>

<script>
  pdfjs.GlobalWorkerOptions.workerSrc = '<%= asset_pack_path('pdf.js') %>';

  $(document).ready(function () {
    $("#names").autocomplete({
      source: function (request, response) {
        $.getJSON("get_names",
          {
            assignment: <%= @assignment.id %>,
            term: $("#names").val()
          },
          response);
      },
      minLength: 1,
      select: function (event, ui) {
        $("#student_id").val(ui.item.id);
      }
    }).data("ui-autocomplete")._renderItem = function (ul, item) {
      return $("<li>")
        .data("ui-autocomplete-item", item)
        .append("<div>" + item.label + "<br>" +
          "<span class='stuid'>" + item.id_number + " | " + item.user_name + "</span></div>")
        .appendTo(ul);
    };
    $("#assign_student").submit(function (e) {
      e.preventDefault();
      $.ajax({
        method: "GET",
        url: "assign_student_and_next",
        dataType: "json",
        data: $("#assign_student").serialize(),
        success: parseNextScan
      });
    });

    function parseNextScan(data) {
      $("#group_members").empty();
      for (var i = 0; i < data.students.length; i++) {
        $("#group_members").append("<p>" + data.students[i] + "</p>")
      }
      $("#assign_student").find("input").val("");
      $("#assign_student").find("#skip").val("1").prop('checked', false);
      let current_group = $("#grouping_id").val();
      update_bar(data.num_valid, data.num_total);
      // Anytime we advance to another assignment
      if (data.grouping_id !== current_group) {
        $("#grouping_id").val(data.grouping_id);
        $("#group_name").html(data.group_name);
        if (data.filelink) {
          pdfjs.getDocument({url: data.filelink}).promise.then(function (pdfDocument) {
            pdfViewer.setDocument(pdfDocument);
          });
        }
        // When an assignment needs to reload because not meeting minimum group members
        // or when all assignments are already assigned
      } else {
        $("#grouping_id").val(current_group);
      }
    }

    let container = document.getElementById('pdfContainer');
    let pdfViewer = new pdfjsViewer.PDFViewer({
      container: container,
      renderer: 'svg'
    });
    document.addEventListener('pagesinit', function() {
      pdfViewer.currentScaleValue = 'page-fit';
    });
    parseNextScan(<%= raw @data.to_json %>);
  });

  function update_bar(v) {
    $('#progress-meter').attr('value', v);
  }
</script>
<% content_for :title do %>
    <%= t('exam_templates.assign_scans.title') %>
    <span class='title-help assignment_groups_help'>
      <p class='help-message-title assignment_groups_help'>
        <%= t('exam_templates.assign_scans.help') %>
      </p>
    </span>
<% end %>
<% content_for :additional_headings do %>
    <meter
      id="progress-meter"
      min="0"
      value="<%= @assignment.get_num_valid %>"
      max="<%= @assignment.get_num_assigned %>"
      low="<%= @assignment.get_num_assigned * 0.35 %>"
      high="<%= @assignment.get_num_assigned * 0.75 %>"
      optimum="<%= @assignment.get_num_assigned %>">
    </meter>
    &nbsp;|&nbsp;
    <%= link_to t('groups.manage_groups'), :assignment_groups %>
<% end %>
<div id='panes-content'>
  <div id='panes'>
    <div id='left-pane' class='display_pane'>
      <div id="pdfContainer">
        <div id="viewer" class="pdfViewer"></div>
      </div>
    </div>

    <div id='drag'></div>

    <div id='right-pane' class='input_pane'>
      <div class='ui-tabs-panel flex-col'>
        <div class="side_header">
          <h2 id="group_name"></h2>
        </div>
        <form id="assign_student" class="side_header">
          <input id="names" name="names" type="text" placeholder="<%= User.human_attribute_name(:full_name) %>">
          <input id="student_id" name="s_id" type="hidden">
          <input id="grouping_id" name="g_id" value="" type="hidden">
          <br>
          <label for="skip"><%= t('exam_templates.assign_scans.skip_group') %></label>
          <input type="checkbox" name="skip" id="skip" value="1">
          <br>
          <button type="submit"><%= t('save') %></button>
        </form>
        <h3>
          <%= Group.human_attribute_name(:student_memberships) %>
        </h3>
        <div id="group_members">
        </div>
      </div>
    </div>
  </div>
</div>
