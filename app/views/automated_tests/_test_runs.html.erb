<% content_for :head do %>
  <%= javascript_tag nonce: true do %>
    document.addEventListener('DOMContentLoaded', () => {
      window.testRunTable = makeTestRunTable(document.getElementById('test_run_table'), {
        course_id: <%= @current_course.id %>,
        result_id: <%= @result&.id || 'null' %>,
        submission_id: <%= @result&.submission_id || 'null' %>,
        assignment_id: <%= @assignment.id %>,
        grouping_id: <%= @grouping.id %>,
        instructor_run: <%= ran_by == 'instructor' %>,
        instructor_view: <%= !@current_role.student? %>
      });
    })
  <% end %>
<% end %>

<h2>
  <%= TestResult.model_name.human.pluralize %>
</h2>

<%# student results page (with instructor tests released) does not need the button %>
<% unless @current_role.student? && ran_by == 'instructor' %>
  <%
    route = @current_role.instructor? ?
    run_tests_course_result_path(@current_course, @result) :
    execute_test_run_course_assignment_automated_tests_path(@current_course, @assignment)

    test_run_id = @grouping.test_runs
                           .where(role: @current_role)
                           .in_progress
                           .order('created_at DESC')
                           .first&.id
    route_stop = stop_test_course_assignment_path(@current_course, @assignment)
  %>
  <div class="rt-action-box">
    <%= button_to t('automated_tests.run_tests'), route, disabled: !@authorized, remote: true %>
    <%= button_to t('automated_tests.cancel_tests'), route_stop, method: :get, params: {test_run_id: test_run_id},
                  disabled: !test_run_id %>
  </div>
<% end %>

<div id='test_run_table'></div>
