<script type='text/jsx'>
  /** @jsx React.DOM */

  var MarkingSchemesTable = React.createClass({
    getDefaultProps: function() {
      var columns = [
        {
          id: 'marking_scheme_name',
          content: 'Marking Scheme Name',
          sortable: true,
          compare: compare_anchor_text,
          searchable: true
        }
      ];

      <% for assignment in @assignments %>
        columns.push({
          id: 'assignment_' + <%= assignment.id %>,
          content: '<%= assignment.short_identifier %>',
          sortable: false,
          compare: compare_anchor_text,
          searchable: false
        });
      <% end %>

      <% for grade_entry_from in @grade_entry_forms %>
        columns.push({
          id: 'gef_' + <%= grade_entry_from.id %>,
          content: '<%= grade_entry_from.short_identifier %>',
          sortable: false,
          compare: compare_anchor_text,
          searchable: false
        });
      <% end %>

      columns.push({
        id: "edit_ms",
        content: "Edit",
        sortable: false,
        compare: compare_anchor_text,
        searchable: false
      });

      return {columns: columns};
    },
    getInitialState: function() {
      return {
        markingSchemes: []
      };
    },
    componentWillMount: function() {
      this.refresh();
    },
    // get info
    refresh: function() {
      document.getElementById('working').style.display = '';
      jQuery.ajax({
        url: '<%= marking_schemes_path() %>' + '/populate',
        method: 'GET',
        dataType: 'json',
        success: function(data) {
          this.setState({
            markingSchemes: data,
          });
        }.bind(this),
        error: function(xhr, status, text) {
          var error = text + ": " + xhr.responseText;
          this.setState({
            error: error
          });
        }.bind(this),
        complete: function() {
          document.getElementById('working').style.display = 'none';
        }
      });
    },
    updateMs: function() {
      this.refresh()
    },
    render: function() {
      var marking_schemes_data = this.state.markingSchemes.map(function(markingScheme) {
        var ms = {};
        ms['marking_scheme_name'] = markingScheme.name;

        <% for assignment in @assignments %>
          var id = <%= assignment.id %>;
          var key = "assignment_" + id;
          var value = markingScheme.assignment_weights[<%= assignment.id %>];
          if (value == null) {
            value = "NA"
          }
          ms[key] = value;
        <% end %>

        <% for grade_entry_from in @grade_entry_forms %>
          var id = <%= grade_entry_from.id %>;
          var key = "gef_" + id;
          var value = markingScheme.spreadsheet_weights[<%= grade_entry_from.id %>];
          if (value == null) {
            value = "NA"
          }
          ms[key] = value;
        <% end %>
        
        ms['edit_ms'] = <a key={markingScheme.edit_link} href={markingScheme.edit_link} data-remote="true">Edit</a>;

        return ms;
      }.bind(this));

        return (
          <div>
            <Table data={marking_schemes_data}
              columns={this.props.columns}
            />
          </div>
        );
    }
  });

  React.renderComponent(<MarkingSchemesTable />, document.getElementById('marking_schemes_table'));

</script>