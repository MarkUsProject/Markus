<% # Template for Penalty Periods - uses Prototypes Template class
   # #{hours} - The number of hours for which to deduct credits.
   # #{interval} - The number of hours between decay periods.
   # #{deduction} - The default number of decay period credits to deduct.
   # #{period_key} - The unique key that represents this Period.  This helps to
   #  differentiate it on submission, and connects the hours and deduction inputs
   #  with a common value
%>

<tr class='period'>
    <%= pf.fields_for :periods, penalty_decay_period do |f| %>
      <td>
        <%= f.number_field :deduction, min: 0, step: :any, required: true %> %
      </td>
      <td>
        <%= f.number_field :interval, min: 0.001, step: :any, required: true %>
        <%= t('submission_rules.hours') %>
      </td>
      <td>
        <%= f.number_field :hours,
                           min: 0.001,
                           step: :any,
                           required: true,
                           class: 'PeriodDeltaChain_Hours penalty-decay-period-hours' %>
        <%= t('submission_rules.hours') %>
      </td>
      <td>
        <span class='PeriodDeltaChain'>
          <span class='PeriodDeltaChain_FromTime'></span>
        </span>
      </td>
      <td>
        <span class='PeriodDeltaChain'>
          <span class='PeriodDeltaChain_ToTime'></span>
        </span>
      </td>
      <td>
        <% if !f.object.nil? && !f.object.new_record? %>
          <%= f.check_box :_destroy %>
        <% else %>
          <%= link_to t(:delete),
                      '#',
                      class: 'penalty-decay-period-delete' %>
        <% end %>
      </td>
    <% end %>
</tr>
