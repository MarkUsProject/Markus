<% # Template for Penalty Periods - uses Prototypes Template class
   # #{hours} - The number of hours for which to deduct credits.
   # #{interval} - The number of hours between decay periods.
   # #{deduction} - The default number of decay period credits to deduct.
   # #{period_key} - The unique key that represents this Period.  This helps to
   #  differentiate it on submission, and connects the hours and deduction inputs
   #  with a common value
%>

<tr class='period'>
    <%= pf.fields_for :periods, penalty_decay_period do |f| %>
      <td>
        <%= f.text_field :deduction, required: true, size: 1 %> %
      </td>
      <td>
        <%= f.text_field :interval, required: true, size: 1 %>
        <%= t('submission_rules.hours') %>
      </td>
      <td>
        <%= f.text_field :hours,
                         size: 1,
                         required: true,
                         class: 'PeriodDeltaChain_Hours',
                         onchange: 'if (penalty_decay_periods) { penalty_decay_periods.refresh(); }' %>
        <%= t('submission_rules.hours') %>
      </td>
      <td>
        <span class='PeriodDeltaChain'>
          <span class='PeriodDeltaChain_FromTime'></span>
        </span>
      </td>
      <td>
        <span class='PeriodDeltaChain'>
          <span class='PeriodDeltaChain_ToTime'></span>
        </span>
      </td>
      <td>
        <% if !f.object.nil? && !f.object.new_record? %>
          <%= f.check_box :_destroy, {class: 'remove_rule'} %>
        <% else %>
          <%= link_to t(:delete),
                      '#',
                      class: 'remove_rule',
                      onclick: 'remove_period(this, penalty_decay_periods); return false;' %>
        <% end %>
      </td>
    <% end %>
</tr>
