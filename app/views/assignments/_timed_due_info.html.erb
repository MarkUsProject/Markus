<% due_date = @assignment.section_due_date(@current_user&.section)
   start_time = @assignment.section_start_time(@current_user&.section) %>
<% duration = @grouping.nil? ?
                @assignment.assignment_properties.adjusted_duration(due_date, [Time.current, start_time].max) :
                @grouping.adjusted_duration %>
<h3><%= I18n.t('activerecord.models.timed_assignment.one') %></h3>
<p>
  <strong><%= I18n.t('assignments.timed.start_time_instructions') %></strong>
  <%= I18n.l @assignment.section_start_time(@current_user&.section) %>
<p>
  <strong><%= I18n.t('assignments.timed.end_time_instructions') %></strong>
  <%= I18n.l due_date %>
</p>
<% if @grouping&.start_time.nil? %>
  <% if Time.current <= due_date && Time.current >= start_time %>
    <p>
      <% parts = AssignmentProperties.duration_parts(duration)
         duration_string = ["#{parts[:hours]} #{I18n.t('durations.hours', count: parts[:hours])}",
                            "#{parts[:minutes]} #{I18n.t('durations.minutes', count: parts[:minutes])}"].join(', ')
      %>
      <%= I18n.t('assignments.timed.before_start_instructions', duration_string: duration_string) %>
    </p>
    <% unless @grouping.nil? %>
      <%= form_with url: start_timed_assignment_assignment_path(@assignment.id), method: 'put', local: true do |f| %>
        <%= f.hidden_field :grouping_id, value: @grouping.id %>
        <%= f.submit I18n.t('assignments.timed.start_button'),
                     data: { confirm: t('assignments.timed.start_confirmation') } %>
      <% end %>
    <% end %>
  <% else %>
    <p><%= I18n.t('assignments.timed.past_end_time') %></p>
  <% end %>
<% else %>
  <% if Time.current < @grouping.due_date %>
    <p>
      <%= I18n.t('assignments.timed.after_start_instructions',
                 start_time: I18n.l(@grouping.start_time),
                 due_date: I18n.l(@grouping.due_date)) %>
    </p>
  <% else %>
    <p><%= I18n.t('assignments.timed.past_due_date') %></p>
  <% end %>
<% end %>
