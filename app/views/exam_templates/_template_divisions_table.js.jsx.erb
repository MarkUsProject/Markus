<script type='text/jsx'>
  /** @jsx React.DOM */

  var DivisionsTable = React.createClass({
    getDefaultProps: function() {
      // Defines the columns used for the table and whether they
      // are sortable searchable. The default initially sorted
      // column is the first sortable column in the array.
      return {
        columns: [
          {
            id: 'label',
            content: '<%= j raw 'Label' %>',
            sortable: true,
            searchable: true,
          },
          {
            id: 'start',
            content: '<%= j raw 'Start' %>',
            sortable: true,
            searchable: true,
          },
          {
            id: 'end',
            content: '<%= j raw 'End' %>',
            sortable: true,
            searchable: true,
          },
          {
            id: 'actions',
            content: '<%= j raw 'Actions' %>',
          }
        ]
      };
    },

    getInitialState: function() {
      return {
        divisions: []
      };
    },

    componentWillMount: function() {
      this.refresh();
    },

    // Asks for new info from backend and sets props accordingly.
    refresh: function() {
      // Show working indicator.
      document.getElementById('working').style.display = '';

      $.ajax({
        method: 'GET',
        dataType: 'json',
        success: function(data) {
          this.setState({
            divisions: data,
          });
        }.bind(this),
          complete: function() {
            document.getElementById('working').style.display = 'none';
          }
        });
    },

    render: function() {
      var divisions_data = this.state.divisions.map(function(division) {
        var d = {};
        d.id = division.id;
        d.label = division.label;
        d.start = division.start;
        d.end = division.end;

        var action_links = [];
        action_links.push(division.delete_link);
        d.actions = <span onClick={this.props.refresh}
          dangerouslySetInnerHTML={{ __html: action_links.join(' | ') }}></span>;

        return d;
      }.bind(this));

      return (
        <div>
          <Table data={divisions_data}
          columns={this.props.columns}
          />
        </div>
      );
    }
  });

  React.renderComponent(<DivisionsTable />, document.getElementById('divisions_table'));
</script>
