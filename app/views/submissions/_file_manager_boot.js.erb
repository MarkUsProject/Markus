<script type="text/javascript">
//<![CDATA[

var files_table = null;

document.observe("dom:loaded", function() {
  files_table = new FilterTable({
    table_id: $('files'),
    headers: {
      filename: {display: "<%= I18n.t('browse_submissions.filename') %>", sortable: true},
      last_modified_date: {display: "<%= I18n.t('browse_submissions.last_revised') %>", sortable: true},
      revision_by: {display: "<%= I18n.t('browse_submissions.revised_by') %>", sortable: true}
      <% if !@grouping.repository_external_commits_only? %>,
      replace: {display: "<%= I18n.t('browse_submissions.replace') %>", sortable: false},
      delete_file: {display: "<%= I18n.t('browse_submissions.delete') %>", sortable :false, row_class: "delete_row"}
      <% end %>
    },
    can_select: false,
    can_select_all: false,
    can_sort: true,
    default_sort: 'filename',
    row_prefix: "files_row_",
    select_name: "files[]",
    select_id_prefix: "file_select_",
    footer: true,
    above_tbodys: ['directories_tbody', 'add_file_tbody'],
    sorts: {
      last_modified_date: function(a, b) {
        return new Date(a['last_modified_date_unconverted']) < new Date(b['last_modified_date_unconverted']);
      }
    }
  });

  new Ajax.Request('<%= populate_file_manager_assignment_submissions_path(:id => @assignment.id,
                               :path => @path) %>',
                   {asynchronous:true, evalScripts:true,
                   onComplete:function(request){$('loading_list').hide();},
                   parameters: 'authenticity_token=' + AUTH_TOKEN})

});

/*
 * Do the same as what would be done server side in terms
 * of filename sanitation. Warn the user what would happen
 * if submit is pressed.
 * See also: public/javascripts/file_manager.js
 */
function sanitized_filename_check(file_input) {
  file_name = file_input.value.replace(/^.*[\\\/]/, '');
  sanitized_filename = file_name.replace(/<%= SubmissionFile::FILENAME_SANITIZATION_REGEXP.source %>/g,
  "<%= SubmissionFile::SUBSTITUTION_CHAR %>");
  if (file_name != sanitized_filename) {
    msg = <%=raw( I18n.t('student.submission.filename_sanitization_js_warning') )%>;
    if( !confirm(msg) ) {
      $(file_input).setValue('');
    };
  }
}

/*
 * Check that new_file_name is the same as file_name. Otherwise
 * refuse to accept the new filename. Note that this is called
 * on the replace file upload button.
 * See also: public/javascripts/file_manager.js
 */
function check_change_of_filename(file_name, new_file_name, file_input) {
  new_file_name = normalize_filename(new_file_name);
  if(file_name != new_file_name) {
    alert(<%=raw( I18n.t('student.submission.replace_file_js_error') )%>);
    $(file_input).setValue('');
  }
}

//]]>
</script>
