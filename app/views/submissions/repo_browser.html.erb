<% content_for :head do %>
  <%= javascript_include_tag 'jquery-ui-timepicker-addon' %>
  <%= stylesheet_link_tag 'jquery-ui', 'jquery-ui-timepicker-addon' %>
  <%= render partial: 'repo_files_table', formats: [:'js.jsx'], handlers: [:erb] %>
<% end %>

<% if flash[:error] -%>
  <div class='error'>
    <%= flash[:error] %>
  </div>
<% end %>

<div class='title_bar'>
  <h1>
    <%= t('browse_submissions.repository_name', repository: @grouping.group.repository_name) %>
    (<%= @grouping.get_all_students_in_group %>)
  </h1>
</div>

<div class='wrapper'>
  <div id='repo_browser_controls'>
    <fieldset>
      <legend>
        <span><%= t('browse_submissions.find_different_revision') %></span>
      </legend>

      <div id='find_revision_error' class='error' style='display:none;'></div>

      <%= form_tag repo_browser_assignment_submission_path(
                     @grouping.assignment.id,
                     @grouping.id,
                     find_revision_by: 'revision_timestamp') do %>
        <%= text_field_tag 'actual_revision_timestamp',
                           l(@revision.timestamp, format: :long_date),
                           class: 'hidden' %>
        <%= text_field_tag 'revision_timestamp',
                           l(@revision.timestamp, format: :long_date),
                           { class: 'datetimepicker',
                             size: 30 } %>
        <%= submit_tag t('browse_submissions.find_by_revision_timestamp') %>
      <% end %>

      <%= form_tag repo_browser_assignment_submission_path(
                     @grouping.assignment,
                     @grouping),
                   find_revision_by: 'revision_identifier' do %>
        <%= select_tag('revision_identifier',
                       options_for_select(@revisions_history.collect { |rev|
                          [t('browse_submissions.revision_history', identifier_ui: rev[:id_ui]) +
                               l(rev[:date], format: :long_date),
                           rev[:id]] },
                       @revision.revision_identifier)) %>
        <%= submit_tag t('browse_submissions.find_by_revision_number') %>
      <% end %>
    </fieldset>
  </div>

  <div class='global_actions'>
    <h2><%= raw(t('browse_submissions.viewing_revision', identifier_ui: @revision.revision_identifier_ui)) %>
        (<span id='current_revision_timestamp_display'> <%= l(@revision.timestamp, format: :long_date) %> </span>)
        <br>
        <%= t('browse_submissions.currently_collected') %>
        <% if @grouping.is_collected %>
           <% if @collected_revision %>
               <%= @collected_revision.revision_identifier_ui +
                   ' (' + l(@collected_revision.timestamp, format: :long_date) + ' )' %>
           <% else %>
               <%= t('browse_submissions.no_rev_before_deadline') %>
           <% end %>
        <% else %>
           <%= t('none') %>
        <% end %>
    </h2>

    <p>
      <%= t('browse_submissions.current_path') %>
      <%
        path_memory = '/'
        absolute_path = @grouping.assignment.repository_folder + @path
        absolute_path.split('/').each do |folder|
          if folder != @grouping.assignment.repository_folder
            path_memory = File.join(path_memory, folder)
          end %>
          <%= link_to(" / #{folder}",
                      action: 'repo_browser',
                      path: path_memory,
                      id: @grouping.id,
                      revision_identifier: @revision.revision_identifier).html_safe %>
      <% end %>
    </p>

    <%= form_tag manually_collect_and_begin_grading_assignment_submission_path(
                   id: @grouping.id,
                   assignment_id: @grouping.assignment.id) do %>
      <%= hidden_field_tag 'current_revision_identifier', @revision.revision_identifier %>
      <p>
        <%= check_box_tag 'apply_late_penalty' %>
        <%= label_tag 'apply_late_penalty',
                      t('collect_submissions.apply_late_penalty') %>
      </p>
      <input type='submit'
             value='<%= t('browse_submissions.collect_and_grab') %>'
             onclick="if (!confirm('<%=t(:collect_and_grade_overwrite_warning)%>')) return false;
                      $('#progress_text').html('<%=t('stopping_collection_process')%>');
                      return true;"
             name='commit'>
      <%= link_to t('download_the', item: t('browse_submissions.all_files')),
                  { action: :downloads,
                    revision_identifier: @revision.revision_identifier,
                    grouping_id: @grouping.id,
                    path: @path },
                  class: 'button' %>
      <div id='progress_text'></div>
    <% end %>
  </div>

  <div id='files_table'></div>
</div>
